android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> c
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int mStyle -> a
    int mTheme -> b
    boolean mCancelable -> c
    boolean mShowsDialog -> d
    int mBackStackId -> e
    android.app.Dialog mDialog -> f
    boolean mDestroyed -> g
    boolean mRemoved -> h
    void dismissInternal(boolean) -> a
    int getTheme() -> a
    void onCreate(android.os.Bundle) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> d
    void onStart() -> b
    void onSaveInstanceState(android.os.Bundle) -> e
    void onStop() -> c
    void onDestroyView() -> d
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> a
    int mState -> i
    android.view.View mAnimatingAway -> j
    int mStateAfterAnimating -> k
    android.os.Bundle mSavedFragmentState -> l
    android.util.SparseArray mSavedViewState -> m
    int mIndex -> n
    java.lang.String mWho -> o
    android.os.Bundle mArguments -> p
    android.support.v4.app.Fragment mTarget -> q
    int mTargetIndex -> r
    int mTargetRequestCode -> s
    boolean mAdded -> t
    boolean mRemoving -> u
    boolean mResumed -> v
    boolean mFromLayout -> w
    boolean mInLayout -> x
    boolean mRestored -> y
    int mBackStackNesting -> z
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> A
    android.support.v4.app.FragmentActivity mActivity -> B
    int mFragmentId -> C
    int mContainerId -> D
    java.lang.String mTag -> E
    boolean mHidden -> F
    boolean mDetached -> G
    boolean mRetainInstance -> H
    boolean mRetaining -> I
    boolean mHasMenu -> J
    boolean mMenuVisible -> K
    boolean mCalled -> L
    int mNextAnim -> M
    android.view.ViewGroup mContainer -> N
    android.view.View mView -> O
    android.view.View mInnerView -> P
    boolean mDeferStart -> Q
    boolean mUserVisibleHint -> R
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> S
    boolean mLoadersStarted -> T
    boolean mCheckedForLoaderManager -> U
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState() -> e
    void setIndex(int) -> a
    boolean isInBackStack() -> f
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> g
    android.support.v4.app.FragmentManager getFragmentManager() -> h
    void onHiddenChanged(boolean) -> b
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    android.view.View getView() -> i
    void onActivityCreated(android.os.Bundle) -> d
    void onStart() -> b
    void onResume() -> j
    void onSaveInstanceState(android.os.Bundle) -> e
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> k
    void onStop() -> c
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> d
    void onDestroy() -> l
    void initState() -> m
    void onDetach() -> n
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> o
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void performStart() -> p
    void performStop() -> q
    void performReallyStop() -> r
    void performDestroyView() -> s
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.e:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.f:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    boolean mCreated -> c
    boolean mResumed -> d
    boolean mStopped -> e
    boolean mReallyStopped -> f
    boolean mRetaining -> g
    boolean mOptionsMenuInvalidated -> h
    boolean mCheckedForLoaderManager -> i
    boolean mLoadersStarted -> j
    android.support.v4.app.HCSparseArray mAllLoaderManagers -> k
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> l
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> a
    void supportInvalidateOptionsMenu() -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void doReallyStop(boolean) -> a
    void onReallyStop() -> c
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragmentIndex(int) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(int,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.g:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.h:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.i:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.app.HCSparseArray loaders -> e
android.support.v4.app.FragmentManager -> android.support.v4.app.j:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    void popBackStack(int,int) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.k:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.l:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    boolean mNeedMenuInvalidate -> p
    boolean mStateSaved -> q
    boolean mDestroyed -> r
    java.lang.String mNoTransactionsBecause -> s
    boolean mHavePendingDeferredStart -> t
    android.os.Bundle mStateBundle -> u
    android.util.SparseArray mStateArray -> v
    java.lang.Runnable mExecCommit -> w
    android.view.animation.Interpolator DECELERATE_QUINT -> x
    android.view.animation.Interpolator DECELERATE_CUBIC -> y
    android.view.animation.Interpolator ACCELERATE_QUINT -> z
    android.view.animation.Interpolator ACCELERATE_CUBIC -> A
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void popBackStack(int,int) -> a
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> s
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroy() -> q
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> r
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.m:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.n:
    int val$id -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.o:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.p:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTransaction -> android.support.v4.app.r:
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
android.support.v4.app.HCSparseArray -> android.support.v4.app.s:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    java.lang.Object get(int) -> a
    java.lang.Object get(int,java.lang.Object) -> a
    void delete(int) -> b
    void remove(int) -> c
    void removeAt(int) -> d
    void gc() -> c
    void put(int,java.lang.Object) -> b
    int size() -> a
    int keyAt(int) -> e
    java.lang.Object valueAt(int) -> f
    void clear() -> b
    int binarySearch(int[],int,int,int) -> a
    int idealByteArraySize(int) -> g
    int idealIntArraySize(int) -> h
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    android.os.Handler mHandler -> V
    java.lang.Runnable mRequestFocus -> W
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> X
    android.widget.ListAdapter mAdapter -> a
    android.widget.ListView mList -> b
    android.view.View mEmptyView -> c
    android.widget.TextView mStandardEmptyView -> d
    android.view.View mProgressContainer -> e
    android.view.View mListContainer -> f
    java.lang.CharSequence mEmptyText -> g
    boolean mListShown -> h
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onDestroyView() -> d
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> a
    void setListAdapter(android.widget.ListAdapter) -> a
    void setListShown(boolean,boolean) -> a
    void ensureList() -> a
android.support.v4.app.ListFragment$1 -> android.support.v4.app.t:
    android.support.v4.app.ListFragment this$0 -> a
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.u:
    android.support.v4.app.ListFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.v:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.w:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.x:
    boolean DEBUG -> a
    android.support.v4.app.HCSparseArray mLoaders -> b
    android.support.v4.app.HCSparseArray mInactiveLoaders -> c
    android.support.v4.app.FragmentActivity mActivity -> d
    boolean mStarted -> e
    boolean mRetaining -> f
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.y:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.z:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.aa:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.a:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.b:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.c:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.d:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.e:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.f:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionIndex(android.view.MotionEvent) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.g:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.h:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.i:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.j:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.k:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    java.lang.CharSequence getPageTitle(int) -> a
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> e
    float mLastKnownPositionOffset -> f
    int mScaledTextSpacing -> g
    boolean mUpdatingText -> h
    boolean mUpdatingPositions -> i
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> j
    int[] ATTRS -> k
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> a
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void updateTextPositions(int,float) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.l:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.m:
    int mScrollState -> b
    android.support.v4.view.PagerTitleStrip this$0 -> a
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void onChanged() -> onChanged
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.n:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.o:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.p:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.q:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.r:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewCompat -> android.support.v4.view.s:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.t:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.u:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.v:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.w:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.x:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.y:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.z:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.aa:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ab:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.ac:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ad:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.PagerAdapter mAdapter -> e
    int mCurItem -> f
    int mRestoredCurItem -> g
    android.os.Parcelable mRestoredAdapterState -> h
    java.lang.ClassLoader mRestoredClassLoader -> i
    android.widget.Scroller mScroller -> j
    android.support.v4.view.ViewPager$PagerObserver mObserver -> k
    int mPageMargin -> l
    android.graphics.drawable.Drawable mMarginDrawable -> m
    int mTopPageBounds -> n
    int mBottomPageBounds -> o
    int mChildWidthMeasureSpec -> p
    int mChildHeightMeasureSpec -> q
    boolean mInLayout -> r
    boolean mScrollingCacheEnabled -> s
    boolean mPopulatePending -> t
    boolean mScrolling -> u
    int mOffscreenPageLimit -> v
    boolean mIsBeingDragged -> w
    boolean mIsUnableToDrag -> x
    int mTouchSlop -> y
    float mInitialMotionX -> z
    float mLastMotionX -> A
    float mLastMotionY -> B
    int mActivePointerId -> C
    android.view.VelocityTracker mVelocityTracker -> D
    int mMinimumVelocity -> E
    int mMaximumVelocity -> F
    int mFlingDistance -> G
    boolean mFakeDragging -> H
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> I
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> J
    boolean mFirstLayout -> K
    boolean mCalledSuper -> L
    int mDecorChildCount -> M
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> N
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> O
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> P
    int mScrollState -> Q
    void initViewPager() -> a
    void setScrollState(int) -> b
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> i
    android.support.v4.view.PagerAdapter getAdapter() -> b
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> a
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> c
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    void addNewItem(int,int) -> a
    void dataSetChanged() -> d
    void populate() -> e
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    void pageScrolled(int) -> c
    void onPageScrolled(int,float,int) -> a
    void completeScroll() -> j
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> k
    void setScrollingCacheEnabled(boolean) -> a
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> a
    boolean pageLeft() -> f
    boolean pageRight() -> g
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$100() -> h
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ae:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.af:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ag:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ah:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> a
    int gravity -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ai:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.aj:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ak:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.al:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.d.a:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.d.b:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.d.c:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.d.d:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.d.e:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
com.google.ads.Ad -> com.google.ads.a:
com.google.ads.AdActivity -> com.google.ads.AdActivity:
    com.google.ads.internal.a a -> a
    java.lang.Object b -> b
    com.google.ads.AdActivity c -> c
    com.google.ads.internal.d d -> d
    com.google.ads.AdActivity e -> e
    com.google.ads.AdActivity f -> f
    com.google.ads.AdActivity$StaticMethodWrapper g -> g
    com.google.ads.internal.AdWebView h -> h
    android.widget.FrameLayout i -> i
    int j -> j
    android.view.ViewGroup k -> k
    boolean l -> l
    long m -> m
    android.widget.RelativeLayout n -> n
    com.google.ads.AdActivity o -> o
    boolean p -> p
    boolean q -> q
    boolean r -> r
    boolean s -> s
    com.google.ads.internal.AdVideoView t -> t
    android.view.View a(int,boolean) -> a
    void a(java.lang.String) -> a
    void a(java.lang.String,java.lang.Throwable) -> a
    com.google.ads.internal.AdVideoView getAdVideoView() -> a
    com.google.ads.internal.AdWebView getOpeningAdWebView() -> b
    boolean isShowing() -> c
    void launchAdActivity(com.google.ads.internal.d,com.google.ads.internal.e) -> a
    void a(java.util.HashMap,com.google.ads.internal.d) -> a
    void b(java.util.HashMap,com.google.ads.internal.d) -> b
    void a(com.google.ads.internal.d) -> a
    com.google.ads.internal.AdVideoView a(android.app.Activity) -> a
    void moveAdVideoView(int,int,int,int) -> a
    void newAdVideoView(int,int,int,int) -> b
    android.widget.RelativeLayout$LayoutParams a(int,int,int,int) -> c
    void onClick(android.view.View) -> onClick
    void onCreate(android.os.Bundle) -> onCreate
    void a(com.google.ads.internal.AdWebView,boolean,int,boolean,boolean) -> a
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void d() -> g
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void setCustomClose(boolean) -> a
    java.lang.Object a() -> d
    com.google.ads.AdActivity b() -> e
    com.google.ads.internal.d c() -> f
    com.google.ads.internal.d b(com.google.ads.internal.d) -> b
com.google.ads.AdActivity$StaticMethodWrapper -> com.google.ads.b:
    boolean isShowing() -> a
    void launchAdActivity(com.google.ads.internal.d,com.google.ads.internal.e) -> a
com.google.ads.AdListener -> com.google.ads.c:
    void onReceiveAd(com.google.ads.Ad) -> a
    void onFailedToReceiveAd(com.google.ads.Ad,com.google.ads.AdRequest$ErrorCode) -> a
    void onPresentScreen(com.google.ads.Ad) -> b
    void onDismissScreen(com.google.ads.Ad) -> c
    void onLeaveApplication(com.google.ads.Ad) -> d
com.google.ads.AdRequest -> com.google.ads.d:
    java.text.SimpleDateFormat a -> b
    java.lang.reflect.Method b -> c
    java.lang.reflect.Method c -> d
    com.google.ads.AdRequest$Gender d -> e
    java.util.Date e -> f
    java.util.Set f -> g
    java.util.Map g -> h
    java.util.Map h -> i
    android.location.Location i -> j
    boolean j -> k
    boolean k -> l
    java.lang.String TEST_EMULATOR -> a
    java.util.Set l -> m
    com.google.ads.AdRequest setKeywords(java.util.Set) -> a
    com.google.ads.AdRequest setNetworkExtras(com.google.ads.mediation.NetworkExtras) -> a
    java.lang.Object getNetworkExtras(java.lang.Class) -> a
    java.util.Map getRequestMap(android.content.Context) -> a
    com.google.ads.AdRequest setTestDevices(java.util.Set) -> b
    boolean isTestDevice(android.content.Context) -> b
com.google.ads.AdRequest$ErrorCode -> com.google.ads.e:
    com.google.ads.AdRequest$ErrorCode INVALID_REQUEST -> a
    com.google.ads.AdRequest$ErrorCode NO_FILL -> b
    com.google.ads.AdRequest$ErrorCode NETWORK_ERROR -> c
    com.google.ads.AdRequest$ErrorCode INTERNAL_ERROR -> d
    java.lang.String a -> e
    com.google.ads.AdRequest$ErrorCode[] b -> f
    com.google.ads.AdRequest$ErrorCode[] values() -> values
    com.google.ads.AdRequest$ErrorCode valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.google.ads.AdRequest$Gender -> com.google.ads.f:
    com.google.ads.AdRequest$Gender UNKNOWN -> a
    com.google.ads.AdRequest$Gender MALE -> b
    com.google.ads.AdRequest$Gender FEMALE -> c
    com.google.ads.AdRequest$Gender[] a -> d
    com.google.ads.AdRequest$Gender[] values() -> values
    com.google.ads.AdRequest$Gender valueOf(java.lang.String) -> valueOf
com.google.ads.AdSize -> com.google.ads.g:
    com.google.ads.AdSize SMART_BANNER -> a
    com.google.ads.AdSize BANNER -> b
    com.google.ads.AdSize IAB_MRECT -> c
    com.google.ads.AdSize IAB_BANNER -> d
    com.google.ads.AdSize IAB_LEADERBOARD -> e
    com.google.ads.AdSize IAB_WIDE_SKYSCRAPER -> f
    int a -> g
    int b -> h
    boolean c -> i
    boolean d -> j
    boolean e -> k
    java.lang.String f -> l
    com.google.ads.AdSize createAdSize(com.google.ads.AdSize,android.content.Context) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int getWidth() -> a
    int getHeight() -> b
    boolean a() -> f
    boolean isFullWidth() -> c
    boolean isAutoHeight() -> d
    boolean isCustomAdSize() -> e
    java.lang.String toString() -> toString
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
com.google.ads.AdView -> com.google.ads.AdView:
    com.google.ads.internal.d a -> a
    void a(android.content.Context,java.lang.String,int,com.google.ads.AdSize,android.util.AttributeSet) -> a
    int a(android.content.Context,int) -> a
    boolean a(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet) -> a
    boolean b(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet) -> b
    void a(android.content.Context,java.lang.String,com.google.ads.AdSize,android.util.AttributeSet) -> a
    com.google.ads.AdSize[] a(java.lang.String) -> a
    void a(android.content.Context,android.util.AttributeSet) -> a
    boolean a(java.lang.String,android.content.Context,android.util.AttributeSet,boolean) -> a
    java.lang.String b(java.lang.String,android.content.Context,android.util.AttributeSet,boolean) -> b
    java.util.Set c(java.lang.String,android.content.Context,android.util.AttributeSet,boolean) -> c
    boolean a(java.lang.String,android.util.AttributeSet) -> a
    void a(android.app.Activity,com.google.ads.AdSize,java.lang.String) -> a
    boolean isRefreshing() -> a
    void loadAd(com.google.ads.AdRequest) -> a
    void setAdListener(com.google.ads.AdListener) -> setAdListener
    void setAppEventListener(com.google.ads.AppEventListener) -> setAppEventListener
    void setSupportedAdSizes(com.google.ads.AdSize[]) -> setSupportedAdSizes
    void a(com.google.ads.AdSize[]) -> a
    void onMeasure(int,int) -> onMeasure
com.google.ads.AppEventListener -> com.google.ads.h:
    void onAppEvent(com.google.ads.Ad,java.lang.String,java.lang.String) -> a
com.google.ads.InterstitialAd -> com.google.ads.i:
com.google.ads.a -> com.google.ads.j:
    java.lang.String a -> a
    java.lang.String b -> b
    java.util.List c -> c
    java.util.List d -> d
    java.util.HashMap e -> e
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.util.List c() -> c
    java.util.List d() -> d
    java.util.HashMap e() -> e
com.google.ads.aa -> com.google.ads.k:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.ab -> com.google.ads.l:
    com.google.ads.internal.a a -> a
    int a(java.util.HashMap,java.lang.String,int,android.util.DisplayMetrics) -> a
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.ac -> com.google.ads.m:
    android.content.Context a -> a
    java.lang.String b -> b
    java.net.HttpURLConnection a(java.net.URL) -> a
    void run() -> run
com.google.ads.ae -> com.google.ads.n:
    java.lang.ref.WeakReference a -> a
    void run() -> run
com.google.ads.af -> com.google.ads.o:
    android.net.Uri a -> a
    android.net.Uri b -> b
    java.lang.String[] c -> c
    java.lang.String[] d -> d
com.google.ads.ag -> com.google.ads.p:
    com.google.ads.internal.a a -> a
    void a(android.webkit.WebView,boolean) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
    void a(android.app.Activity,android.webkit.WebView,java.lang.String) -> a
    boolean a(android.content.Context,long) -> a
    boolean a(android.content.Context,long,android.content.SharedPreferences) -> a
    void a(android.app.Activity) -> a
com.google.ads.ag$a -> com.google.ads.q:
    java.lang.ref.WeakReference a -> a
    android.content.SharedPreferences$Editor b -> b
    android.content.SharedPreferences$Editor a(android.app.Activity) -> a
    void run() -> run
com.google.ads.ag$b -> com.google.ads.r:
    java.lang.ref.WeakReference a -> a
    android.webkit.WebView b -> b
    java.lang.String c -> c
    void run() -> run
com.google.ads.ag$c -> com.google.ads.s:
    boolean a -> a
    android.webkit.WebView b -> b
    void run() -> run
com.google.ads.ah -> com.google.ads.t:
    boolean a(android.content.Context) -> a
    boolean a(android.content.Intent,android.content.Context) -> a
com.google.ads.ai -> com.google.ads.u:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.ai$a -> com.google.ads.v:
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.ai$b -> com.google.ads.w:
    com.google.ads.ai$b a -> a
    com.google.ads.ai$b b -> b
    java.lang.String c -> c
    com.google.ads.ai$b[] d -> d
    com.google.ads.ai$b[] values() -> values
    com.google.ads.ai$b valueOf(java.lang.String) -> valueOf
com.google.ads.ai$c -> com.google.ads.x:
    com.google.ads.internal.d a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.b -> com.google.ads.y:
    java.math.BigInteger a -> a
    java.math.BigInteger b -> b
    com.google.ads.b c -> c
    com.google.ads.b a() -> a
    java.math.BigInteger b() -> b
    java.math.BigInteger c() -> c
    java.math.BigInteger d() -> d
    byte[] a(long) -> a
com.google.ads.c -> com.google.ads.z:
    java.util.Map a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.util.List d -> d
    java.lang.Integer e -> e
    java.lang.Integer f -> f
    java.util.List g -> g
    java.util.List h -> h
    java.util.List i -> i
    com.google.ads.c a(java.lang.String) -> a
    boolean a() -> a
    int b() -> b
    java.lang.String c() -> c
    boolean d() -> d
    int e() -> e
    java.util.List f() -> f
    java.util.List g() -> g
    java.util.List h() -> h
    java.util.List i() -> i
    com.google.ads.a a(org.json.JSONObject) -> a
    com.google.ads.internal.h j() -> j
    java.util.List a(org.json.JSONObject,java.lang.String) -> a
com.google.ads.c$1 -> com.google.ads.aa:
com.google.ads.d -> com.google.ads.ab:
    com.google.ads.c a -> a
    long b -> b
    boolean a() -> a
    void a(com.google.ads.c,int) -> a
    com.google.ads.c b() -> b
com.google.ads.doubleclick.DfpAdView -> com.google.ads.doubleclick.DfpAdView:
    void setAppEventListener(com.google.ads.AppEventListener) -> setAppEventListener
    void setSupportedAdSizes(com.google.ads.AdSize[]) -> setSupportedAdSizes
com.google.ads.doubleclick.DfpExtras -> com.google.ads.doubleclick.a:
    java.lang.String a -> a
    java.lang.String getPublisherProvidedId() -> a
    com.google.ads.doubleclick.DfpExtras clearExtras() -> b
    com.google.ads.mediation.admob.AdMobAdapterExtras clearExtras() -> c
com.google.ads.e -> com.google.ads.ac:
    com.google.ads.internal.d a -> a
    com.google.ads.h b -> b
    java.lang.Object c -> c
    java.lang.Thread d -> d
    java.lang.Object e -> e
    boolean f -> f
    java.lang.Object g -> g
    boolean a() -> a
    void a(com.google.ads.c,com.google.ads.AdRequest) -> a
    boolean a(com.google.ads.c,com.google.ads.internal.d) -> a
    boolean d() -> b
    void b(com.google.ads.c,com.google.ads.AdRequest) -> b
    boolean a(java.lang.String,android.app.Activity,com.google.ads.AdRequest,com.google.ads.f,java.util.HashMap,long) -> a
    boolean e(com.google.ads.h) -> b
    void d(com.google.ads.h) -> a
    void a(com.google.ads.e,com.google.ads.c,com.google.ads.AdRequest) -> a
    java.lang.Object a(com.google.ads.e) -> a
    java.lang.Thread a(com.google.ads.e,java.lang.Thread) -> a
    com.google.ads.internal.d b(com.google.ads.e) -> b
    boolean a(com.google.ads.e,com.google.ads.h) -> a
com.google.ads.e$1 -> com.google.ads.ad:
    com.google.ads.c a -> a
    com.google.ads.AdRequest b -> b
    com.google.ads.e c -> c
    void run() -> run
com.google.ads.e$7 -> com.google.ads.ae:
    com.google.ads.c a -> a
    com.google.ads.e b -> b
    void run() -> run
com.google.ads.e$8 -> com.google.ads.af:
    com.google.ads.h a -> a
    android.view.View b -> b
    com.google.ads.f c -> c
    com.google.ads.e d -> d
    void run() -> run
com.google.ads.f -> com.google.ads.ag:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.util.List d -> d
    java.util.List e -> e
    java.util.List f -> f
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.util.List d() -> d
com.google.ads.g -> com.google.ads.ah:
    java.lang.String a(java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.Object a(java.lang.String,java.lang.Class) -> a
com.google.ads.g$a -> com.google.ads.ai:
    com.google.ads.g$a a -> a
    com.google.ads.g$a b -> b
    com.google.ads.g$a c -> c
    com.google.ads.g$a d -> d
    com.google.ads.g$a e -> e
    com.google.ads.g$a f -> f
    com.google.ads.g$a[] g -> g
    com.google.ads.g$a[] values() -> values
    com.google.ads.g$a valueOf(java.lang.String) -> valueOf
com.google.ads.h -> com.google.ads.aj:
    com.google.ads.internal.h a -> a
    com.google.ads.f b -> b
    boolean c -> c
    boolean d -> d
    com.google.ads.g$a e -> e
    com.google.ads.e f -> f
    com.google.ads.mediation.MediationAdapter g -> g
    boolean h -> h
    boolean i -> i
    android.view.View j -> j
    android.os.Handler k -> k
    java.lang.String l -> l
    com.google.ads.AdRequest m -> m
    java.util.HashMap n -> n
    void a(android.app.Activity) -> a
    void b() -> a
    boolean c() -> b
    boolean d() -> c
    com.google.ads.g$a e() -> d
    android.view.View f() -> e
    java.lang.String h() -> f
    void a(boolean,com.google.ads.g$a) -> a
    void a(com.google.ads.mediation.MediationAdapter) -> a
    void k() -> g
    boolean l() -> h
    com.google.ads.mediation.MediationAdapter a(com.google.ads.h) -> a
com.google.ads.h$1 -> com.google.ads.ak:
    com.google.ads.h a -> a
    void run() -> run
com.google.ads.i -> com.google.ads.al:
    com.google.ads.h a -> a
    java.lang.String b -> b
    com.google.ads.AdRequest c -> c
    java.util.HashMap d -> d
    boolean e -> e
    java.lang.ref.WeakReference f -> f
    boolean a(java.util.Map) -> a
    void run() -> run
    void a(java.lang.String,java.lang.Throwable,com.google.ads.g$a) -> a
    void a(com.google.ads.mediation.MediationAdapter) -> a
com.google.ads.i$a -> com.google.ads.am:
com.google.ads.internal.AdVideoView -> com.google.ads.internal.AdVideoView:
    com.google.ads.internal.a b -> b
    java.lang.ref.WeakReference c -> c
    com.google.ads.internal.AdWebView d -> d
    android.widget.MediaController a -> a
    long e -> e
    android.widget.VideoView f -> f
    java.lang.String g -> g
    void a() -> a
    void b() -> b
    void setMediaControllerEnabled(boolean) -> setMediaControllerEnabled
    void setSrc(java.lang.String) -> setSrc
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    boolean onError(android.media.MediaPlayer,int,int) -> onError
    void onPrepared(android.media.MediaPlayer) -> onPrepared
    void c() -> c
    void d() -> d
    void a(int) -> a
    void a(android.view.MotionEvent) -> a
    void e() -> e
    void f() -> f
com.google.ads.internal.AdVideoView$a -> com.google.ads.internal.a:
    java.lang.ref.WeakReference a -> a
    android.os.Handler b -> b
    void run() -> run
    void a() -> a
com.google.ads.internal.AdWebView -> com.google.ads.internal.AdWebView:
    java.lang.ref.WeakReference a -> a
    com.google.ads.AdSize b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    void a() -> a
    void b() -> b
    void c() -> c
    com.google.ads.AdActivity d() -> d
    boolean e() -> e
    boolean f() -> f
    void setAdActivity(com.google.ads.AdActivity) -> setAdActivity
    void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> loadDataWithBaseURL
    void loadUrl(java.lang.String) -> loadUrl
    void stopLoading() -> stopLoading
    void destroy() -> destroy
    void setAdSize(com.google.ads.AdSize) -> setAdSize
    void onMeasure(int,int) -> onMeasure
    void setCustomClose(boolean) -> setCustomClose
    void setIsExpandedMraid(boolean) -> setIsExpandedMraid
com.google.ads.internal.AdWebView$1 -> com.google.ads.internal.b:
    com.google.ads.internal.AdWebView a -> a
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
com.google.ads.internal.a -> com.google.ads.internal.c:
    com.google.ads.internal.a d -> d
    com.google.ads.util.f a -> a
    java.util.Map b -> b
    java.util.Map c -> c
    java.lang.String a(android.net.Uri,java.util.HashMap) -> a
    void a(com.google.ads.internal.d,java.util.Map,android.net.Uri,android.webkit.WebView) -> a
    boolean a(android.net.Uri) -> a
    boolean b(android.net.Uri) -> b
    boolean c(android.net.Uri) -> c
    void a(android.webkit.WebView,java.lang.String,java.lang.String) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
    void a(android.webkit.WebView,java.util.Map) -> a
    void a(android.webkit.WebView) -> a
    void b(android.webkit.WebView) -> b
    com.google.ads.internal.a a() -> a
com.google.ads.internal.a$1 -> com.google.ads.internal.d:
com.google.ads.internal.a$2 -> com.google.ads.internal.e:
    com.google.ads.internal.a a() -> a
    java.lang.Object b() -> b
com.google.ads.internal.a$3 -> com.google.ads.internal.f:
com.google.ads.internal.b -> com.google.ads.internal.g:
    boolean a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    java.lang.String c(java.lang.String) -> c
com.google.ads.internal.c -> com.google.ads.internal.h:
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    boolean f -> f
    com.google.ads.internal.f g -> g
    com.google.ads.internal.d h -> h
    com.google.ads.AdRequest i -> i
    android.webkit.WebView j -> j
    java.lang.String k -> k
    java.util.LinkedList l -> l
    java.lang.String m -> m
    com.google.ads.AdSize n -> n
    boolean o -> o
    boolean p -> p
    com.google.ads.AdRequest$ErrorCode q -> q
    boolean r -> r
    int s -> s
    java.lang.Thread t -> t
    boolean u -> u
    com.google.ads.internal.c$d v -> v
    boolean a -> a
    void a(java.lang.String) -> a
    void a(com.google.ads.AdRequest) -> a
    void run() -> run
    void b() -> a
    void a(java.lang.String,com.google.ads.c,com.google.ads.d) -> a
    java.lang.String a(java.util.Map,android.app.Activity) -> a
    java.lang.String d() -> c
    java.lang.String e() -> d
    java.lang.String f() -> e
    java.lang.String g() -> f
    java.lang.String h() -> g
    void a(com.google.ads.AdRequest$ErrorCode,boolean) -> a
    void b(java.lang.String,java.lang.String) -> b
    void i() -> h
    void j() -> i
    void a(boolean) -> a
    void b(java.lang.String) -> b
    void a(java.lang.String,java.lang.String) -> a
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void a(com.google.ads.AdSize) -> a
    void a(com.google.ads.AdRequest$ErrorCode) -> a
    void c() -> b
    void b(boolean) -> b
    void a(int) -> a
    void c(boolean) -> c
    void a(com.google.ads.internal.c$d) -> a
    void d(boolean) -> d
    android.webkit.WebView a(com.google.ads.internal.c) -> a
    java.lang.String b(com.google.ads.internal.c) -> b
    com.google.ads.internal.d c(com.google.ads.internal.c) -> c
    com.google.ads.AdSize d(com.google.ads.internal.c) -> d
com.google.ads.internal.c$1 -> com.google.ads.internal.i:
    com.google.ads.c a -> a
    com.google.ads.internal.c b -> b
    void run() -> run
com.google.ads.internal.c$2 -> com.google.ads.internal.j:
    int[] a -> a
com.google.ads.internal.c$a -> com.google.ads.internal.k:
    com.google.ads.internal.d a -> a
    android.webkit.WebView b -> b
    com.google.ads.internal.f c -> c
    com.google.ads.AdRequest$ErrorCode d -> d
    boolean e -> e
    void run() -> run
com.google.ads.internal.c$b -> com.google.ads.internal.l:
    com.google.ads.internal.c a -> a
com.google.ads.internal.c$c -> com.google.ads.internal.m:
    java.lang.String b -> b
    java.lang.String c -> c
    android.webkit.WebView d -> d
    com.google.ads.internal.c a -> a
    void run() -> run
com.google.ads.internal.c$d -> com.google.ads.internal.n:
    com.google.ads.internal.c$d a -> a
    com.google.ads.internal.c$d b -> b
    com.google.ads.internal.c$d c -> c
    com.google.ads.internal.c$d d -> d
    java.lang.String e -> e
    com.google.ads.internal.c$d[] f -> f
    com.google.ads.internal.c$d[] values() -> values
    com.google.ads.internal.c$d valueOf(java.lang.String) -> valueOf
com.google.ads.internal.c$e -> com.google.ads.internal.o:
    com.google.ads.internal.d a -> a
    android.webkit.WebView b -> b
    java.util.LinkedList c -> c
    int d -> d
    boolean e -> e
    java.lang.String f -> f
    com.google.ads.AdSize g -> g
    void run() -> run
com.google.ads.internal.d -> com.google.ads.internal.p:
    java.lang.Object a -> a
    com.google.ads.m b -> b
    com.google.ads.internal.c c -> c
    com.google.ads.AdRequest d -> d
    com.google.ads.internal.g e -> e
    com.google.ads.internal.AdWebView f -> f
    com.google.ads.internal.i g -> g
    android.os.Handler h -> h
    long i -> i
    boolean j -> j
    boolean k -> k
    boolean l -> l
    boolean m -> m
    boolean n -> n
    android.content.SharedPreferences o -> o
    long p -> p
    com.google.ads.ae q -> q
    boolean r -> r
    java.util.LinkedList s -> s
    java.util.LinkedList t -> t
    int u -> u
    java.lang.Boolean v -> v
    com.google.ads.d w -> w
    com.google.ads.e x -> x
    com.google.ads.f y -> y
    java.lang.String z -> z
    void a() -> a
    void a(java.lang.String) -> a
    java.lang.String c() -> b
    void d() -> c
    void e() -> d
    void f() -> e
    void g() -> f
    com.google.ads.m h() -> g
    com.google.ads.d i() -> h
    com.google.ads.internal.c j() -> i
    com.google.ads.internal.AdWebView k() -> j
    com.google.ads.internal.i l() -> k
    com.google.ads.internal.g m() -> l
    void a(int) -> a
    int n() -> m
    long o() -> n
    boolean p() -> o
    boolean q() -> p
    boolean s() -> q
    void a(com.google.ads.AdRequest) -> a
    void a(com.google.ads.AdRequest$ErrorCode) -> a
    void a(com.google.ads.c) -> a
    void a(android.view.View,com.google.ads.h,com.google.ads.f,boolean) -> a
    void b(com.google.ads.c) -> b
    void t() -> r
    void u() -> s
    void v() -> t
    void a(java.lang.String,java.lang.String) -> a
    void w() -> u
    void a(com.google.ads.f,java.lang.Boolean) -> a
    void a(java.util.List,java.lang.String) -> a
    void a(java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String) -> a
    void x() -> v
    void a(java.lang.Runnable) -> a
    void y() -> w
    void a(long) -> a
    void a(boolean) -> a
    void a(android.view.View) -> a
    void a(float) -> a
    void b(long) -> b
    void B() -> x
    void C() -> y
    void b(java.lang.String) -> b
    void a(java.util.LinkedList) -> a
    void b(boolean) -> b
com.google.ads.internal.e -> com.google.ads.internal.q:
    java.lang.String a -> a
    java.util.HashMap b -> b
    java.util.HashMap a(java.io.Serializable) -> a
    android.os.Bundle a() -> a
    java.lang.String b() -> b
    java.util.HashMap c() -> c
com.google.ads.internal.f -> com.google.ads.internal.r:
    com.google.ads.internal.c a -> a
    com.google.ads.internal.d b -> b
    com.google.ads.internal.f$a c -> c
    boolean d -> d
    boolean e -> e
    java.lang.String f -> f
    java.lang.Thread g -> g
    void a() -> a
    void a(java.net.HttpURLConnection) -> a
    void b(java.net.HttpURLConnection) -> b
    void c(java.net.HttpURLConnection) -> c
    void d(java.net.HttpURLConnection) -> d
    void e(java.net.HttpURLConnection) -> e
    void f(java.net.HttpURLConnection) -> f
    void g(java.net.HttpURLConnection) -> g
    void h(java.net.HttpURLConnection) -> h
    void i(java.net.HttpURLConnection) -> i
    void j(java.net.HttpURLConnection) -> j
    void a(boolean) -> a
    void k(java.net.HttpURLConnection) -> k
    void l(java.net.HttpURLConnection) -> l
    void a(java.lang.String) -> a
    void a(java.net.HttpURLConnection,int) -> a
    void run() -> run
    void b() -> b
    void a(android.content.Context,java.net.HttpURLConnection) -> a
com.google.ads.internal.f$1 -> com.google.ads.internal.s:
    java.net.HttpURLConnection a(java.net.URL) -> a
com.google.ads.internal.f$a -> com.google.ads.internal.t:
    java.net.HttpURLConnection a(java.net.URL) -> a
com.google.ads.internal.g -> com.google.ads.internal.u:
    java.util.LinkedList a -> a
    long b -> b
    long c -> c
    long d -> d
    java.util.LinkedList e -> e
    long f -> f
    long g -> g
    long h -> h
    long i -> i
    long j -> j
    boolean k -> k
    boolean l -> l
    java.lang.String m -> m
    long n -> n
    java.util.LinkedList o -> o
    java.util.LinkedList p -> p
    void a() -> a
    void b() -> b
    void c() -> c
    void a(com.google.ads.g$a) -> a
    java.lang.String d() -> d
    java.lang.String e() -> e
    void f() -> f
    void g() -> g
    void h() -> h
    void i() -> i
    long j() -> j
    java.lang.String k() -> k
    java.lang.String l() -> l
    long m() -> m
    long n() -> n
    long o() -> o
    long p() -> p
    void q() -> q
    void r() -> r
    long s() -> s
    void t() -> t
    void u() -> u
    long v() -> v
    void w() -> w
    void x() -> x
    boolean y() -> y
    void z() -> z
    boolean A() -> A
    void B() -> B
    void C() -> C
    java.lang.String D() -> D
    void a(java.lang.String) -> a
    long E() -> E
com.google.ads.internal.h -> com.google.ads.internal.v:
    com.google.ads.AdSize b -> b
    boolean c -> c
    com.google.ads.internal.h a -> a
    com.google.ads.internal.h a(com.google.ads.AdSize,android.content.Context) -> a
    com.google.ads.internal.h a(com.google.ads.AdSize) -> a
    boolean a() -> a
    com.google.ads.AdSize b() -> b
    void b(com.google.ads.AdSize) -> b
com.google.ads.internal.i -> com.google.ads.internal.w:
    com.google.ads.internal.a c -> c
    com.google.ads.internal.d a -> a
    java.util.Map d -> d
    boolean b -> b
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    com.google.ads.internal.i a(com.google.ads.internal.d,java.util.Map,boolean,boolean) -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void a(boolean) -> a
    void b(boolean) -> b
    void c(boolean) -> c
    void d(boolean) -> d
com.google.ads.internal.j -> com.google.ads.internal.x:
    byte[] a -> a
    android.view.ViewGroup a(android.app.Activity,com.google.ads.internal.d) -> a
com.google.ads.internal.j$a -> com.google.ads.internal.y:
    android.gesture.GestureStore a -> a
    android.app.Activity b -> b
    com.google.ads.internal.d c -> c
    void onGesturePerformed(android.gesture.GestureOverlayView,android.gesture.Gesture) -> onGesturePerformed
    android.app.Activity a(com.google.ads.internal.j$a) -> a
com.google.ads.internal.j$a$1 -> com.google.ads.internal.z:
    com.google.ads.internal.j$a a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.internal.j$a$2 -> com.google.ads.internal.aa:
    java.lang.String a -> a
    com.google.ads.internal.j$a b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.j -> com.google.ads.an:
    com.google.ads.h a -> a
com.google.ads.k -> com.google.ads.ao:
    com.google.ads.h a -> a
com.google.ads.l -> com.google.ads.ap:
    com.google.ads.l b -> b
    com.google.ads.util.i$b a -> a
    com.google.ads.l a() -> a
com.google.ads.l$a -> com.google.ads.aq:
    com.google.ads.util.i$c a -> a
    com.google.ads.util.i$c b -> b
    com.google.ads.util.i$c c -> c
    com.google.ads.util.i$c d -> d
    com.google.ads.util.i$c e -> e
    com.google.ads.util.i$c f -> f
    com.google.ads.util.i$c g -> g
    com.google.ads.util.i$c h -> h
    com.google.ads.util.i$c i -> i
    com.google.ads.util.i$c j -> j
    com.google.ads.util.i$c k -> k
    com.google.ads.util.i$c l -> l
com.google.ads.m -> com.google.ads.ar:
    com.google.ads.util.i$b a -> a
    com.google.ads.util.i$c b -> b
    com.google.ads.util.i$c c -> c
    com.google.ads.util.i$b d -> d
    com.google.ads.util.i$d e -> e
    com.google.ads.util.i$b f -> f
    com.google.ads.util.i$b g -> g
    com.google.ads.util.i$b h -> h
    com.google.ads.util.i$b i -> i
    com.google.ads.util.i$b j -> j
    com.google.ads.util.i$b k -> k
    com.google.ads.util.i$c l -> l
    com.google.ads.util.i$c m -> m
    com.google.ads.util.i$c n -> n
    boolean a() -> a
    boolean b() -> b
com.google.ads.mediation.MediationAdRequest -> com.google.ads.a.a:
    com.google.ads.AdRequest a -> a
    boolean b -> b
    boolean c -> c
com.google.ads.mediation.MediationAdapter -> com.google.ads.a.b:
    void destroy() -> a
    java.lang.Class getAdditionalParametersType() -> b
    java.lang.Class getServerParametersType() -> c
com.google.ads.mediation.MediationBannerAdapter -> com.google.ads.a.c:
    void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.MediationServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.NetworkExtras) -> a
com.google.ads.mediation.MediationBannerListener -> com.google.ads.a.d:
com.google.ads.mediation.MediationInterstitialAdapter -> com.google.ads.a.e:
    void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.MediationServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.NetworkExtras) -> a
com.google.ads.mediation.MediationInterstitialListener -> com.google.ads.a.f:
com.google.ads.mediation.MediationServerParameters -> com.google.ads.a.g:
    void load(java.util.Map) -> a
    void a() -> a
com.google.ads.mediation.MediationServerParameters$MappingException -> com.google.ads.a.h:
com.google.ads.mediation.MediationServerParameters$Parameter -> com.google.ads.a.i:
    java.lang.String name() -> a
    boolean required() -> b
com.google.ads.mediation.NetworkExtras -> com.google.ads.a.j:
com.google.ads.mediation.admob.AdMobAdapterExtras -> com.google.ads.a.a.a:
    boolean a -> a
    boolean b -> b
    java.util.Map c -> c
    boolean getPlusOneOptOut() -> d
    java.util.Map getExtras() -> e
    com.google.ads.mediation.admob.AdMobAdapterExtras clearExtras() -> c
com.google.ads.n -> com.google.ads.as:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.o -> com.google.ads.at:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.p -> com.google.ads.au:
    com.google.ads.internal.a a -> a
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.q -> com.google.ads.av:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.r -> com.google.ads.aw:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.s -> com.google.ads.ax:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.searchads.SearchAdRequest -> com.google.ads.b.a:
    java.lang.String a -> b
    int b -> c
    int c -> d
    int d -> e
    int e -> f
    int f -> g
    int g -> h
    java.lang.String h -> i
    int i -> j
    int j -> k
    com.google.ads.searchads.SearchAdRequest$BorderType k -> l
    int l -> m
    java.lang.String m -> n
    java.util.Map getRequestMap(android.content.Context) -> a
    java.lang.String a(int) -> a
com.google.ads.searchads.SearchAdRequest$BorderType -> com.google.ads.b.b:
    com.google.ads.searchads.SearchAdRequest$BorderType NONE -> a
    com.google.ads.searchads.SearchAdRequest$BorderType DASHED -> b
    com.google.ads.searchads.SearchAdRequest$BorderType DOTTED -> c
    com.google.ads.searchads.SearchAdRequest$BorderType SOLID -> d
    java.lang.String a -> e
    com.google.ads.searchads.SearchAdRequest$BorderType[] b -> f
    com.google.ads.searchads.SearchAdRequest$BorderType[] values() -> values
    com.google.ads.searchads.SearchAdRequest$BorderType valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.google.ads.t -> com.google.ads.ay:
    com.google.ads.internal.a a -> a
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.u -> com.google.ads.az:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
    java.lang.Runnable a(java.lang.String,android.webkit.WebView) -> a
com.google.ads.util.AdUtil -> com.google.ads.util.AdUtil:
    int a -> a
    java.lang.Boolean b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    android.media.AudioManager f -> f
    boolean g -> g
    boolean h -> h
    java.lang.String i -> i
    boolean a(android.content.Intent,android.content.Context) -> a
    java.lang.String a(java.lang.Readable) -> a
    int a(java.lang.String) -> a
    java.lang.String a(android.content.Context) -> a
    int a() -> a
    int b() -> b
    int a(android.content.Context,android.util.DisplayMetrics) -> a
    int b(android.content.Context,android.util.DisplayMetrics) -> b
    boolean b(android.content.Context) -> b
    boolean a(int,int,java.lang.String) -> a
    boolean c(android.content.Context) -> c
    boolean c() -> c
    boolean a(com.google.ads.util.d) -> a
    boolean a(android.net.Uri) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    java.lang.String f(android.content.Context) -> f
    com.google.ads.util.AdUtil$a g(android.content.Context) -> g
    android.util.DisplayMetrics a(android.app.Activity) -> a
    java.lang.String a(android.location.Location) -> a
    java.lang.String b(android.location.Location) -> b
    java.lang.String c(java.lang.String) -> c
    java.util.HashMap b(android.net.Uri) -> b
    boolean d() -> d
    void a(boolean) -> a
    void h(android.content.Context) -> h
    java.lang.String i(android.content.Context) -> i
    void a(android.webkit.WebView) -> a
    void a(java.net.HttpURLConnection,android.content.Context) -> a
    java.lang.String a(java.util.Map) -> a
    org.json.JSONObject b(java.util.Map) -> b
    org.json.JSONArray a(java.util.Set) -> a
com.google.ads.util.AdUtil$UserActivityReceiver -> com.google.ads.util.AdUtil$UserActivityReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.google.ads.util.AdUtil$a -> com.google.ads.util.a:
    com.google.ads.util.AdUtil$a a -> a
    com.google.ads.util.AdUtil$a b -> b
    com.google.ads.util.AdUtil$a c -> c
    com.google.ads.util.AdUtil$a d -> d
    com.google.ads.util.AdUtil$a e -> e
    com.google.ads.util.AdUtil$a f -> f
    com.google.ads.util.AdUtil$a[] g -> g
    com.google.ads.util.AdUtil$a[] values() -> values
    com.google.ads.util.AdUtil$a valueOf(java.lang.String) -> valueOf
com.google.ads.util.a -> com.google.ads.util.b:
    boolean a -> a
    void a(boolean,java.lang.String) -> a
    void b(boolean) -> a
    void b(boolean,java.lang.String) -> b
    void b(java.lang.Object) -> a
    void a(java.lang.Object,java.lang.Object) -> a
    void a(java.lang.String) -> a
    void c(boolean,java.lang.String) -> c
com.google.ads.util.a$a -> com.google.ads.util.c:
com.google.ads.util.b -> com.google.ads.util.d:
    com.google.ads.util.b$b a -> a
    int b -> b
    void a(com.google.ads.util.b$a,java.lang.String) -> a
    void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable) -> a
    void a(java.lang.String) -> a
    void a(java.lang.String,java.lang.Throwable) -> a
    void b(java.lang.String) -> b
    void b(java.lang.String,java.lang.Throwable) -> b
    void c(java.lang.String) -> c
    void c(java.lang.String,java.lang.Throwable) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void d(java.lang.String,java.lang.Throwable) -> d
    boolean a(java.lang.String,int) -> a
    boolean a(int) -> a
com.google.ads.util.b$a -> com.google.ads.util.e:
    com.google.ads.util.b$a a -> a
    com.google.ads.util.b$a b -> b
    com.google.ads.util.b$a c -> c
    com.google.ads.util.b$a d -> d
    com.google.ads.util.b$a e -> e
    int f -> f
    com.google.ads.util.b$a[] g -> g
    com.google.ads.util.b$a[] values() -> values
    com.google.ads.util.b$a valueOf(java.lang.String) -> valueOf
com.google.ads.util.b$b -> com.google.ads.util.f:
    void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable) -> a
com.google.ads.util.c -> com.google.ads.util.g:
    boolean a -> a
    byte[] a(java.lang.String) -> a
    byte[] a(byte[],int) -> a
    byte[] a(byte[],int,int,int) -> a
    java.lang.String b(byte[],int) -> b
    byte[] c(byte[],int) -> c
    byte[] b(byte[],int,int,int) -> b
com.google.ads.util.c$a -> com.google.ads.util.h:
    byte[] a -> a
    int b -> b
com.google.ads.util.c$b -> com.google.ads.util.i:
    int[] c -> c
    int[] d -> d
    int e -> e
    int f -> f
    int[] g -> g
    boolean a(byte[],int,int,boolean) -> a
com.google.ads.util.c$c -> com.google.ads.util.j:
    byte[] h -> h
    byte[] i -> i
    byte[] j -> j
    int c -> c
    int k -> k
    boolean d -> d
    boolean e -> e
    boolean f -> f
    byte[] l -> l
    boolean g -> g
    boolean a(byte[],int,int,boolean) -> a
com.google.ads.util.d -> com.google.ads.util.k:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.google.ads.util.d d -> d
    com.google.ads.util.d e -> e
    boolean equals(java.lang.Object) -> equals
    boolean a(java.lang.String,java.lang.String) -> a
    int hashCode() -> hashCode
com.google.ads.util.e -> com.google.ads.util.l:
    int a(android.content.Context,android.util.DisplayMetrics) -> a
    int b(android.content.Context,android.util.DisplayMetrics) -> b
    int a(android.content.Context,float,int) -> a
com.google.ads.util.f -> com.google.ads.util.m:
    java.lang.Object b() -> b
com.google.ads.util.g -> com.google.ads.util.n:
    void a(android.webkit.WebSettings,com.google.ads.m) -> a
    void a(android.view.View) -> a
    void b(android.view.View) -> b
    void a(android.view.Window) -> a
com.google.ads.util.g$1 -> com.google.ads.util.o:
    int[] a -> a
com.google.ads.util.g$a -> com.google.ads.util.p:
    com.google.ads.m a -> a
    void onCloseWindow(android.webkit.WebView) -> onCloseWindow
    boolean onConsoleMessage(android.webkit.ConsoleMessage) -> onConsoleMessage
    void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater) -> onExceededDatabaseQuota
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsBeforeUnload(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsBeforeUnload
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
    void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage$QuotaUpdater) -> onReachedMaxAppCacheSize
    void onShowCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
    boolean a(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsResult,android.webkit.JsPromptResult,boolean) -> a
    void a(android.app.AlertDialog$Builder,java.lang.String,android.webkit.JsResult) -> a
    void a(android.app.AlertDialog$Builder,android.content.Context,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> a
com.google.ads.util.g$a$1 -> com.google.ads.util.q:
    android.webkit.JsResult a -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.google.ads.util.g$a$2 -> com.google.ads.util.r:
    android.webkit.JsResult a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.util.g$a$3 -> com.google.ads.util.s:
    android.webkit.JsResult a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.util.g$a$4 -> com.google.ads.util.t:
    android.webkit.JsPromptResult a -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.google.ads.util.g$a$5 -> com.google.ads.util.u:
    android.webkit.JsPromptResult a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.util.g$a$6 -> com.google.ads.util.v:
    android.webkit.JsPromptResult a -> a
    android.widget.EditText b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.util.g$b -> com.google.ads.util.w:
    android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String) -> shouldInterceptRequest
    android.webkit.WebResourceResponse a(java.lang.String,android.content.Context) -> a
com.google.ads.util.h -> com.google.ads.util.x:
com.google.ads.util.h$a -> com.google.ads.util.y:
    void onShowCustomView(android.view.View,int,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
com.google.ads.util.i -> com.google.ads.util.z:
    java.lang.Object a -> a
    int b -> b
    java.util.HashMap c -> c
    int o -> o
    java.util.ArrayList d -> d
    void finalize() -> finalize
    java.lang.String toString() -> toString
    void a(com.google.ads.util.i$a) -> a
    void a(com.google.ads.util.i,com.google.ads.util.i$a) -> a
com.google.ads.util.i$1 -> com.google.ads.util.aa:
com.google.ads.util.i$a -> com.google.ads.util.ab:
    java.lang.Object a -> a
    java.lang.String b -> b
    com.google.ads.util.i c -> c
    java.lang.String toString() -> toString
com.google.ads.util.i$b -> com.google.ads.util.ac:
    com.google.ads.util.i d -> d
    java.lang.Object a() -> a
    java.lang.String toString() -> toString
com.google.ads.util.i$c -> com.google.ads.util.ad:
    boolean e -> e
    com.google.ads.util.i d -> d
    java.lang.Object a() -> a
    void a(java.lang.Object) -> a
    java.lang.String toString() -> toString
com.google.ads.util.i$d -> com.google.ads.util.ae:
    com.google.ads.util.i d -> d
    java.lang.Object a() -> a
    java.lang.String toString() -> toString
com.google.ads.v -> com.google.ads.ba:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.w -> com.google.ads.bb:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.x -> com.google.ads.bc:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
    void a(java.util.HashMap,java.lang.String,com.google.ads.util.i$c) -> a
    void b(java.util.HashMap,java.lang.String,com.google.ads.util.i$c) -> b
    void c(java.util.HashMap,java.lang.String,com.google.ads.util.i$c) -> c
com.google.ads.y -> com.google.ads.bd:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.z -> com.google.ads.be:
    com.google.ads.AdActivity$StaticMethodWrapper a -> a
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.limemobile.app.launcher.LauncherApplication -> com.limemobile.app.launcher.LauncherApplication:
    com.limemobile.app.launcher.receiver.LauncherModel mModel -> a
    com.limemobile.app.launcher.util.IconCache mIconCache -> b
    java.lang.Object runtime -> c
    android.database.ContentObserver mFavoritesObserver -> d
    void onCreate() -> onCreate
    void onTerminate() -> onTerminate
    com.limemobile.app.launcher.receiver.LauncherModel setLauncher(com.limemobile.app.launcher.activity.Launcher) -> a
    com.limemobile.app.launcher.util.IconCache getIconCache() -> a
    com.limemobile.app.launcher.receiver.LauncherModel getModel() -> b
com.limemobile.app.launcher.LauncherApplication$1 -> com.limemobile.app.launcher.a:
    com.limemobile.app.launcher.LauncherApplication this$0 -> a
    void onChange(boolean) -> onChange
com.limemobile.app.launcher.activity.HTCSenseLockScreen -> com.limemobile.app.launcher.activity.HTCSenseLockScreen:
    com.limemobile.app.launcher.view.HTCSenseLockScreenView mSenseUnLockView -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onBackPressed() -> onBackPressed
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onAttachedToWindow() -> onAttachedToWindow
    void OnUnLockTriggered() -> a
    void OnShortcutTriggered(android.content.Intent) -> a
com.limemobile.app.launcher.activity.Launcher -> com.limemobile.app.launcher.activity.Launcher:
    java.lang.Object sLock -> a
    int sScreen -> b
    android.content.BroadcastReceiver mCloseSystemDialogsReceiver -> c
    android.database.ContentObserver mWidgetObserver -> d
    android.view.LayoutInflater mInflater -> e
    com.limemobile.app.launcher.view.DragController mDragController -> f
    com.limemobile.app.launcher.view.Workspace mWorkspace -> g
    android.appwidget.AppWidgetManager mAppWidgetManager -> h
    com.limemobile.app.launcher.view.LauncherAppWidgetHost mAppWidgetHost -> i
    com.limemobile.app.launcher.view.CellLayout$CellInfo mAddItemCellInfo -> j
    com.limemobile.app.launcher.view.CellLayout$CellInfo mMenuAddInfo -> k
    int[] mCellCoordinates -> l
    com.limemobile.app.launcher.entity.FolderInfo mFolderInfo -> m
    com.limemobile.app.launcher.view.DeleteZone mDeleteZone -> n
    com.limemobile.app.launcher.view.HandleView mHandleView -> o
    com.limemobile.app.launcher.view.AllAppsView mAllAppsGrid -> p
    com.limemobile.app.launcher.view.AllAppsView mAllAppsAndroid -> q
    com.limemobile.app.launcher.view.AllAppsView mAllAppsWP8 -> r
    android.os.Bundle mSavedState -> s
    android.text.SpannableStringBuilder mDefaultKeySsb -> t
    boolean mWorkspaceLoading -> u
    boolean mPaused -> v
    boolean mRestoring -> w
    boolean mWaitingForResult -> x
    boolean mOnResumeNeedsLoad -> y
    android.os.Bundle mSavedInstanceState -> z
    com.limemobile.app.launcher.receiver.LauncherModel mModel -> A
    com.limemobile.app.launcher.util.IconCache mIconCache -> B
    com.limemobile.app.launcher.activity.Launcher$LocaleConfiguration mLocaleConfiguration -> C
    android.os.AsyncTask mLocalCheckTask -> D
    java.util.ArrayList mDesktopItems -> E
    java.util.HashMap sFolders -> F
    com.limemobile.app.launcher.view.IndicatorView mIndicator -> G
    android.view.View mExpandedMenuAnchor -> H
    com.limemobile.app.launcher.widget.QuickSelectMenu mExpandedMenu -> I
    java.lang.String[] mHotseatConfig -> J
    android.content.Intent[] mHotseats -> K
    android.graphics.drawable.Drawable[] mHotseatIcons -> L
    java.lang.CharSequence[] mHotseatLabels -> M
    android.widget.ImageView[] mHotseatViews -> N
    android.graphics.drawable.Drawable[] mHotseatReflectionIcons -> O
    boolean mAutoSense -> P
    void onCreate(android.os.Bundle) -> onCreate
    void checkForLocaleChange() -> o
    void readConfiguration(android.content.Context,com.limemobile.app.launcher.activity.Launcher$LocaleConfiguration) -> c
    void writeConfiguration(android.content.Context,com.limemobile.app.launcher.activity.Launcher$LocaleConfiguration) -> d
    int getScreen() -> a
    void setScreen(int) -> a
    void setWallpaperDimension() -> p
    android.net.Uri getDefaultBrowserUri() -> q
    void loadHotseats() -> r
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onPause() -> onPause
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    boolean acceptFilter() -> s
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    java.lang.String getTypedText() -> t
    void clearTypedText() -> u
    void restoreState(android.os.Bundle) -> a
    void setupViews() -> v
    void previousScreen(android.view.View) -> previousScreen
    void nextScreen(android.view.View) -> nextScreen
    void launchHotSeat(android.view.View) -> launchHotSeat
    android.view.View createShortcut(com.limemobile.app.launcher.entity.ShortcutInfo) -> a
    android.view.View createShortcut(int,android.view.ViewGroup,com.limemobile.app.launcher.entity.ShortcutInfo) -> a
    void completeAddApplication(android.content.Context,android.content.Intent,com.limemobile.app.launcher.view.CellLayout$CellInfo) -> a
    void completeAddShortcut(android.content.Intent,com.limemobile.app.launcher.view.CellLayout$CellInfo) -> a
    void completeAddAppWidget(android.content.Intent,com.limemobile.app.launcher.view.CellLayout$CellInfo) -> b
    void removeAppWidget(com.limemobile.app.launcher.entity.LauncherAppWidgetInfo) -> a
    com.limemobile.app.launcher.view.LauncherAppWidgetHost getAppWidgetHost() -> b
    void closeSystemDialogs() -> c
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onDestroy() -> onDestroy
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startSearch(java.lang.String,boolean,android.os.Bundle,boolean) -> startSearch
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onSearchRequested() -> onSearchRequested
    boolean isWorkspaceLocked() -> d
    void addItems() -> w
    void manageApps() -> x
    void addAppWidget(android.content.Intent) -> a
    void processShortcut(android.content.Intent) -> b
    void addLiveFolder(android.content.Intent) -> c
    void addFolder() -> e
    void removeFolder(com.limemobile.app.launcher.entity.FolderInfo) -> a
    void completeAddLiveFolder(android.content.Intent,com.limemobile.app.launcher.view.CellLayout$CellInfo) -> c
    com.limemobile.app.launcher.entity.LiveFolderInfo addLiveFolder(android.content.Context,android.content.Intent,com.limemobile.app.launcher.view.CellLayout$CellInfo,boolean) -> a
    boolean findSingleSlot(com.limemobile.app.launcher.view.CellLayout$CellInfo) -> a
    boolean findSlot(com.limemobile.app.launcher.view.CellLayout$CellInfo,int[],int,int) -> a
    void showNotifications() -> y
    void startWallpaper() -> z
    void registerContentObservers() -> A
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onBackPressed() -> onBackPressed
    void closeFolder() -> B
    void closeFolder(com.limemobile.app.launcher.view.Folder) -> a
    void onAppWidgetReset() -> C
    void unbindDesktopItems() -> D
    void onClick(android.view.View) -> onClick
    void startActivitySafely(android.content.Intent,java.lang.Object) -> a
    void startActivityForResultSafely(android.content.Intent,int) -> a
    void handleFolderClick(com.limemobile.app.launcher.entity.FolderInfo) -> c
    void openFolder(com.limemobile.app.launcher.entity.FolderInfo) -> d
    boolean onLongClick(android.view.View) -> onLongClick
    void dismissPreview(android.view.View) -> a
    void showPreviews(android.view.View) -> b
    void showPreviews(android.view.View,int,int) -> a
    com.limemobile.app.launcher.view.Workspace getWorkspace() -> f
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void onPrepareDialog(int,android.app.Dialog) -> onPrepareDialog
    void showRenameDialog(com.limemobile.app.launcher.entity.FolderInfo) -> b
    void showAddDialog(com.limemobile.app.launcher.view.CellLayout$CellInfo) -> b
    void pickShortcut() -> E
    boolean isAllAppsVisible() -> g
    void zoomed(float) -> a
    void showAllApps(boolean) -> a
    void closeAllApps(boolean) -> b
    void lockAllApps() -> h
    boolean setLoadOnResume() -> i
    int getCurrentWorkspaceScreen() -> j
    void startBinding() -> k
    void bindItems(java.util.ArrayList,int,int) -> a
    void bindFolders(java.util.HashMap) -> a
    void bindAppWidget(com.limemobile.app.launcher.entity.LauncherAppWidgetInfo) -> b
    void finishBindingItems() -> l
    void bindAllApplications(java.util.ArrayList) -> a
    void bindAppsAdded(java.util.ArrayList) -> b
    void bindAppsUpdated(java.util.ArrayList) -> c
    void bindAppsRemoved(java.util.ArrayList,boolean) -> a
    void prepareExpandedMenu() -> m
    void changeAllAppMode(boolean) -> c
    com.limemobile.app.launcher.view.Workspace access$0(com.limemobile.app.launcher.activity.Launcher) -> a
    void access$1(com.limemobile.app.launcher.activity.Launcher,android.view.View) -> a
    void access$2(com.limemobile.app.launcher.activity.Launcher,boolean) -> a
    java.util.HashMap access$3() -> n
    com.limemobile.app.launcher.entity.FolderInfo access$4(com.limemobile.app.launcher.activity.Launcher) -> b
    void access$5(com.limemobile.app.launcher.activity.Launcher,com.limemobile.app.launcher.entity.FolderInfo) -> a
    boolean access$6(com.limemobile.app.launcher.activity.Launcher) -> c
    com.limemobile.app.launcher.receiver.LauncherModel access$7(com.limemobile.app.launcher.activity.Launcher) -> d
    void access$8(com.limemobile.app.launcher.activity.Launcher,boolean) -> b
    void access$9(com.limemobile.app.launcher.activity.Launcher) -> e
    com.limemobile.app.launcher.view.LauncherAppWidgetHost access$10(com.limemobile.app.launcher.activity.Launcher) -> f
    void access$11(com.limemobile.app.launcher.activity.Launcher) -> g
    boolean access$12(com.limemobile.app.launcher.activity.Launcher) -> h
    void access$13(com.limemobile.app.launcher.activity.Launcher) -> i
    void access$14(android.content.Context,com.limemobile.app.launcher.activity.Launcher$LocaleConfiguration) -> a
    void access$15(com.limemobile.app.launcher.activity.Launcher,com.limemobile.app.launcher.activity.Launcher$LocaleConfiguration) -> a
    void access$16(com.limemobile.app.launcher.activity.Launcher) -> j
    void access$17(android.content.Context,com.limemobile.app.launcher.activity.Launcher$LocaleConfiguration) -> b
    void access$18(com.limemobile.app.launcher.activity.Launcher) -> k
    void access$19(com.limemobile.app.launcher.activity.Launcher) -> l
    void access$20(com.limemobile.app.launcher.activity.Launcher) -> m
com.limemobile.app.launcher.activity.Launcher$1 -> com.limemobile.app.launcher.activity.a:
    com.limemobile.app.launcher.activity.Launcher this$0 -> a
    com.limemobile.app.launcher.activity.Launcher$LocaleConfiguration doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.limemobile.app.launcher.activity.Launcher$LocaleConfiguration) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.limemobile.app.launcher.activity.Launcher$2 -> com.limemobile.app.launcher.activity.b:
    com.limemobile.app.launcher.activity.Launcher this$0 -> a
    com.limemobile.app.launcher.activity.Launcher$LocaleConfiguration val$localeConfiguration -> b
    void run() -> run
com.limemobile.app.launcher.activity.Launcher$3 -> com.limemobile.app.launcher.activity.c:
    com.limemobile.app.launcher.activity.Launcher this$0 -> a
    android.view.View val$anchor -> b
    void onDismiss() -> onDismiss
com.limemobile.app.launcher.activity.Launcher$4 -> com.limemobile.app.launcher.activity.d:
    com.limemobile.app.launcher.activity.Launcher this$0 -> a
    void onItemSelected(java.lang.CharSequence,int) -> a
com.limemobile.app.launcher.activity.Launcher$AppWidgetResetObserver -> com.limemobile.app.launcher.activity.e:
    com.limemobile.app.launcher.activity.Launcher this$0 -> a
    void onChange(boolean) -> onChange
com.limemobile.app.launcher.activity.Launcher$CloseSystemDialogsIntentReceiver -> com.limemobile.app.launcher.activity.f:
    com.limemobile.app.launcher.activity.Launcher this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.limemobile.app.launcher.activity.Launcher$CreateShortcut -> com.limemobile.app.launcher.activity.g:
    com.limemobile.app.launcher.adapter.AddAdapter mAdapter -> b
    com.limemobile.app.launcher.activity.Launcher this$0 -> a
    android.app.Dialog createDialog() -> a
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void cleanup() -> b
    void onClick(android.content.DialogInterface,int) -> onClick
    void onShow(android.content.DialogInterface) -> onShow
com.limemobile.app.launcher.activity.Launcher$LocaleConfiguration -> com.limemobile.app.launcher.activity.h:
    java.lang.String locale -> a
    int mcc -> b
    int mnc -> c
com.limemobile.app.launcher.activity.Launcher$PreviewTouchHandler -> com.limemobile.app.launcher.activity.i:
    android.view.View mAnchor -> b
    com.limemobile.app.launcher.activity.Launcher this$0 -> a
    void onClick(android.view.View) -> onClick
    void run() -> run
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.limemobile.app.launcher.activity.Launcher$RenameFolder -> com.limemobile.app.launcher.activity.j:
    android.widget.EditText mInput -> b
    com.limemobile.app.launcher.activity.Launcher this$0 -> a
    android.app.Dialog createDialog() -> a
    void changeFolderName() -> b
    void cleanup() -> c
    void access$0(com.limemobile.app.launcher.activity.Launcher$RenameFolder) -> a
    void access$1(com.limemobile.app.launcher.activity.Launcher$RenameFolder) -> b
    android.widget.EditText access$2(com.limemobile.app.launcher.activity.Launcher$RenameFolder) -> c
    com.limemobile.app.launcher.activity.Launcher access$4(com.limemobile.app.launcher.activity.Launcher$RenameFolder) -> d
com.limemobile.app.launcher.activity.Launcher$RenameFolder$1 -> com.limemobile.app.launcher.activity.k:
    com.limemobile.app.launcher.activity.Launcher$RenameFolder this$1 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.limemobile.app.launcher.activity.Launcher$RenameFolder$2 -> com.limemobile.app.launcher.activity.l:
    com.limemobile.app.launcher.activity.Launcher$RenameFolder this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.limemobile.app.launcher.activity.Launcher$RenameFolder$3 -> com.limemobile.app.launcher.activity.m:
    com.limemobile.app.launcher.activity.Launcher$RenameFolder this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.limemobile.app.launcher.activity.Launcher$RenameFolder$4 -> com.limemobile.app.launcher.activity.n:
    com.limemobile.app.launcher.activity.Launcher$RenameFolder this$1 -> a
    void onShow(android.content.DialogInterface) -> onShow
com.limemobile.app.launcher.activity.Settings -> com.limemobile.app.launcher.activity.Settings:
    android.view.View back -> a
    android.preference.Preference$OnPreferenceChangeListener preferenceChangeListener -> b
    void onCreate(android.os.Bundle) -> onCreate
    boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference) -> onPreferenceTreeClick
    void onClick(android.view.View) -> onClick
    void onPause() -> onPause
com.limemobile.app.launcher.activity.Settings$1 -> com.limemobile.app.launcher.activity.o:
    com.limemobile.app.launcher.activity.Settings this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.limemobile.app.launcher.activity.WallpaperChooser -> com.limemobile.app.launcher.activity.WallpaperChooser:
    android.widget.Gallery mGallery -> a
    android.widget.ImageView mImageView -> b
    boolean mIsWallpaperSet -> c
    android.graphics.Bitmap mBitmap -> d
    java.util.ArrayList mThumbs -> e
    java.util.ArrayList mImages -> f
    com.limemobile.app.launcher.activity.WallpaperChooser$WallpaperLoader mLoader -> g
    void onCreate(android.os.Bundle) -> onCreate
    void findWallpapers() -> a
    void addWallpapers(android.content.res.Resources,java.lang.String,int) -> a
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void selectWallpaper(int) -> a
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    void onClick(android.view.View) -> onClick
    java.util.ArrayList access$0(com.limemobile.app.launcher.activity.WallpaperChooser) -> a
    java.util.ArrayList access$1(com.limemobile.app.launcher.activity.WallpaperChooser) -> b
    android.graphics.Bitmap access$2(com.limemobile.app.launcher.activity.WallpaperChooser) -> c
    android.widget.ImageView access$3(com.limemobile.app.launcher.activity.WallpaperChooser) -> d
    void access$4(com.limemobile.app.launcher.activity.WallpaperChooser,android.graphics.Bitmap) -> a
    void access$5(com.limemobile.app.launcher.activity.WallpaperChooser,com.limemobile.app.launcher.activity.WallpaperChooser$WallpaperLoader) -> a
com.limemobile.app.launcher.activity.WallpaperChooser$ImageAdapter -> com.limemobile.app.launcher.activity.p:
    android.view.LayoutInflater mLayoutInflater -> b
    com.limemobile.app.launcher.activity.WallpaperChooser this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.limemobile.app.launcher.activity.WallpaperChooser$WallpaperLoader -> com.limemobile.app.launcher.activity.q:
    android.graphics.BitmapFactory$Options mOptions -> a
    com.limemobile.app.launcher.activity.WallpaperChooser this$0 -> b
    android.graphics.Bitmap doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(android.graphics.Bitmap) -> a
    void cancel() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.limemobile.app.launcher.adapter.AddAdapter -> com.limemobile.app.launcher.a.a:
    android.view.LayoutInflater mInflater -> a
    java.util.ArrayList mItems -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
com.limemobile.app.launcher.adapter.AddAdapter$ListItem -> com.limemobile.app.launcher.a.b:
    java.lang.CharSequence text -> a
    android.graphics.drawable.Drawable image -> b
    int actionTag -> c
    com.limemobile.app.launcher.adapter.AddAdapter this$0 -> d
com.limemobile.app.launcher.adapter.LiveFolderAdapter -> com.limemobile.app.launcher.a.c:
    boolean mIsList -> a
    android.view.LayoutInflater mInflater -> b
    java.util.HashMap mIcons -> c
    java.util.HashMap mCustomIcons -> d
    com.limemobile.app.launcher.activity.Launcher mLauncher -> e
    android.database.Cursor query(android.content.Context,com.limemobile.app.launcher.entity.LiveFolderInfo) -> a
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.graphics.drawable.Drawable loadIcon(android.content.Context,android.database.Cursor,com.limemobile.app.launcher.adapter.LiveFolderAdapter$ViewHolder) -> a
    void cleanup() -> a
com.limemobile.app.launcher.adapter.LiveFolderAdapter$ViewHolder -> com.limemobile.app.launcher.a.d:
    android.widget.TextView name -> a
    android.widget.TextView description -> b
    android.widget.ImageView icon -> c
    android.content.Intent intent -> d
    long id -> e
    boolean useBaseIntent -> f
    int idIndex -> g
    int nameIndex -> h
    int descriptionIndex -> i
    int intentIndex -> j
    int iconBitmapIndex -> k
    int iconResourceIndex -> l
    int iconPackageIndex -> m
com.limemobile.app.launcher.adapter.ShortcutsAdapter -> com.limemobile.app.launcher.a.e:
    android.view.LayoutInflater mInflater -> a
    com.limemobile.app.launcher.util.IconCache mIconCache -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.limemobile.app.launcher.android.AllApps2D -> com.limemobile.app.launcher.android.AllApps2D:
    com.limemobile.app.launcher.activity.Launcher mLauncher -> a
    com.limemobile.app.launcher.view.DragController mDragController -> b
    android.widget.GridView mGrid -> c
    java.util.ArrayList mAllAppsList -> d
    float mZoom -> e
    com.limemobile.app.launcher.android.AllApps2D$AppsAdapter mAppsAdapter -> f
    void onFinishInflate() -> onFinishInflate
    void setLauncher(com.limemobile.app.launcher.activity.Launcher) -> setLauncher
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    void setDragController(com.limemobile.app.launcher.view.DragController) -> setDragController
    void onDropCompleted(android.view.View,boolean) -> a
    void zoom(float,boolean) -> a
    void onAnimationEnd() -> onAnimationEnd
    boolean isVisible() -> a
    boolean isOpaque() -> isOpaque
    void setApps(java.util.ArrayList) -> setApps
    void addApps(java.util.ArrayList) -> a
    void removeApps(java.util.ArrayList) -> b
    void updateApps(java.util.ArrayList) -> c
    int findAppByComponent(java.util.ArrayList,com.limemobile.app.launcher.entity.ApplicationInfo) -> a
    void surrender() -> b
    com.limemobile.app.launcher.view.AllAppsView$MenuType getOptionsMenuType() -> c
    void onClick(android.view.View) -> onClick
    com.limemobile.app.launcher.activity.Launcher access$0(com.limemobile.app.launcher.android.AllApps2D) -> a
com.limemobile.app.launcher.android.AllApps2D$1 -> com.limemobile.app.launcher.android.a:
    com.limemobile.app.launcher.android.AllApps2D this$0 -> a
    void onClick(android.view.View) -> onClick
com.limemobile.app.launcher.android.AllApps2D$AppsAdapter -> com.limemobile.app.launcher.android.b:
    android.view.LayoutInflater mInflater -> b
    com.limemobile.app.launcher.android.AllApps2D this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.limemobile.app.launcher.android.AllApps2D$HomeButton -> com.limemobile.app.launcher.android.AllApps2D$HomeButton:
    android.view.View focusSearch(int) -> focusSearch
com.limemobile.app.launcher.anim.Rotate3d -> com.limemobile.app.launcher.b.a:
    float mFromDegree -> a
    float mToDegree -> b
    float mCenterX -> c
    float mCenterY -> d
    float mSaveFromDegree -> e
    float mSaveToDegree -> f
    int type -> g
    android.graphics.Camera mCamera -> h
    void rotate(float) -> a
    void initialize(int,int,int,int) -> initialize
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.limemobile.app.launcher.common.AllAppsList -> com.limemobile.app.launcher.c.a:
    java.util.ArrayList data -> a
    java.util.ArrayList added -> b
    java.util.ArrayList removed -> c
    java.util.ArrayList modified -> d
    com.limemobile.app.launcher.util.IconCache mIconCache -> e
    void add(com.limemobile.app.launcher.entity.ApplicationInfo) -> a
    void clear() -> a
    void addPackage(android.content.Context,java.lang.String) -> a
    void removePackage(java.lang.String) -> a
    void updatePackage(android.content.Context,java.lang.String) -> b
    java.util.List findActivitiesForPackage(android.content.Context,java.lang.String) -> c
    boolean findActivity(java.util.List,android.content.ComponentName) -> a
    boolean findActivity(java.util.ArrayList,android.content.ComponentName) -> a
    com.limemobile.app.launcher.entity.ApplicationInfo findApplicationInfoLocked(java.lang.String,java.lang.String) -> a
com.limemobile.app.launcher.common.DeferredHandler -> com.limemobile.app.launcher.c.b:
    java.util.LinkedList mQueue -> a
    android.os.MessageQueue mMessageQueue -> b
    com.limemobile.app.launcher.common.DeferredHandler$Impl mHandler -> c
    void post(java.lang.Runnable) -> a
    void postIdle(java.lang.Runnable) -> b
    void scheduleNextLocked() -> a
    java.util.LinkedList access$0(com.limemobile.app.launcher.common.DeferredHandler) -> a
com.limemobile.app.launcher.common.DeferredHandler$IdleRunnable -> com.limemobile.app.launcher.c.c:
    java.lang.Runnable mRunnable -> a
    com.limemobile.app.launcher.common.DeferredHandler this$0 -> b
    void run() -> run
com.limemobile.app.launcher.common.DeferredHandler$Impl -> com.limemobile.app.launcher.c.d:
    com.limemobile.app.launcher.common.DeferredHandler this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    boolean queueIdle() -> queueIdle
com.limemobile.app.launcher.common.LauncherSettings -> com.limemobile.app.launcher.c.e:
com.limemobile.app.launcher.common.LauncherSettings$BaseLauncherColumns -> com.limemobile.app.launcher.c.f:
com.limemobile.app.launcher.common.LauncherSettings$Favorites -> com.limemobile.app.launcher.c.g:
    android.net.Uri CONTENT_URI -> a
    android.net.Uri CONTENT_URI_NO_NOTIFICATION -> b
    android.net.Uri getContentUri(long,boolean) -> a
com.limemobile.app.launcher.common.SymmetricalLinearTween -> com.limemobile.app.launcher.c.h:
    android.os.Handler mHandler -> a
    int mDuration -> b
    com.limemobile.app.launcher.common.TweenCallback mCallback -> c
    boolean mRunning -> d
    long mBase -> e
    boolean mDirection -> f
    float mValue -> g
    java.lang.Runnable mTick -> h
    void start(boolean) -> a
    void start(boolean,long) -> a
com.limemobile.app.launcher.common.SymmetricalLinearTween$1 -> com.limemobile.app.launcher.c.i:
    com.limemobile.app.launcher.common.SymmetricalLinearTween this$0 -> a
    void run() -> run
com.limemobile.app.launcher.common.TweenCallback -> com.limemobile.app.launcher.c.j:
    void onTweenValueChanged(float,float) -> a
    void onTweenStarted() -> a
    void onTweenFinished() -> b
com.limemobile.app.launcher.entity.ApplicationInfo -> com.limemobile.app.launcher.d.a:
    java.lang.CharSequence title -> a
    java.lang.String ascii -> b
    android.graphics.Bitmap titleBitmap -> c
    android.content.Intent intent -> d
    android.graphics.Bitmap iconBitmap -> e
    android.content.ComponentName componentName -> f
    void setActivity(android.content.ComponentName,int) -> a
    java.lang.String toString() -> toString
    com.limemobile.app.launcher.entity.ShortcutInfo makeShortcut() -> a
    int compareTo(com.limemobile.app.launcher.entity.ApplicationInfo) -> a
    int compareTo(java.lang.Object) -> compareTo
com.limemobile.app.launcher.entity.FolderInfo -> com.limemobile.app.launcher.d.b:
    boolean opened -> a
    java.lang.CharSequence title -> b
com.limemobile.app.launcher.entity.ItemInfo -> com.limemobile.app.launcher.d.c:
    long id -> g
    int itemType -> h
    long container -> i
    int screen -> j
    int cellX -> k
    int cellY -> l
    int spanX -> m
    int spanY -> n
    boolean isGesture -> o
    void onAddToDatabase(android.content.ContentValues) -> a
    byte[] flattenBitmap(android.graphics.Bitmap) -> a
    void writeBitmap(android.content.ContentValues,android.graphics.Bitmap) -> a
    void unbind() -> b
    java.lang.String toString() -> toString
com.limemobile.app.launcher.entity.LauncherAppWidgetInfo -> com.limemobile.app.launcher.d.d:
    int appWidgetId -> a
    android.appwidget.AppWidgetHostView hostView -> b
    void onAddToDatabase(android.content.ContentValues) -> a
    java.lang.String toString() -> toString
    void unbind() -> b
com.limemobile.app.launcher.entity.LiveFolderInfo -> com.limemobile.app.launcher.d.e:
    android.content.Intent baseIntent -> c
    android.net.Uri uri -> d
    int displayMode -> e
    android.graphics.Bitmap icon -> f
    android.content.Intent$ShortcutIconResource iconResource -> p
    void onAddToDatabase(android.content.ContentValues) -> a
com.limemobile.app.launcher.entity.ShortcutInfo -> com.limemobile.app.launcher.d.f:
    java.lang.CharSequence title -> a
    android.content.Intent intent -> b
    boolean customIcon -> c
    boolean usingFallbackIcon -> d
    android.content.Intent$ShortcutIconResource iconResource -> e
    android.graphics.Bitmap mIcon -> f
    void setIcon(android.graphics.Bitmap) -> b
    android.graphics.Bitmap getIcon(com.limemobile.app.launcher.util.IconCache) -> a
    void setActivity(android.content.ComponentName,int) -> a
    void onAddToDatabase(android.content.ContentValues) -> a
    java.lang.String toString() -> toString
    void unbind() -> b
com.limemobile.app.launcher.entity.UserFolderInfo -> com.limemobile.app.launcher.d.g:
    java.util.ArrayList contents -> c
    void add(com.limemobile.app.launcher.entity.ShortcutInfo) -> a
    void remove(com.limemobile.app.launcher.entity.ShortcutInfo) -> b
    void onAddToDatabase(android.content.ContentValues) -> a
com.limemobile.app.launcher.provider.LauncherProvider -> com.limemobile.app.launcher.provider.LauncherProvider:
    android.net.Uri CONTENT_APPWIDGET_RESET_URI -> a
    android.database.sqlite.SQLiteOpenHelper mOpenHelper -> b
    boolean onCreate() -> onCreate
    java.lang.String getType(android.net.Uri) -> getType
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int bulkInsert(android.net.Uri,android.content.ContentValues[]) -> bulkInsert
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    void sendNotify(android.net.Uri) -> a
    java.lang.String buildOrWhereString(java.lang.String,int[]) -> a
com.limemobile.app.launcher.provider.LauncherProvider$DatabaseHelper -> com.limemobile.app.launcher.provider.a:
    android.content.Context mContext -> a
    android.appwidget.AppWidgetHost mAppWidgetHost -> b
    void sendAppWidgetResetNotify() -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    boolean convertDatabase(android.database.sqlite.SQLiteDatabase) -> a
    int copyFromCursor(android.database.sqlite.SQLiteDatabase,android.database.Cursor) -> a
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    boolean updateContactsShortcuts(android.database.sqlite.SQLiteDatabase) -> b
    void normalizeIcons(android.database.sqlite.SQLiteDatabase) -> c
    void convertWidgets(android.database.sqlite.SQLiteDatabase) -> d
    int loadFavorites(android.database.sqlite.SQLiteDatabase) -> e
    boolean addAppShortcut(android.database.sqlite.SQLiteDatabase,android.content.ContentValues,android.content.res.TypedArray,android.content.pm.PackageManager,android.content.Intent) -> a
    android.content.ComponentName getSearchWidgetProvider() -> b
    android.content.ComponentName getProviderInPackage(java.lang.String) -> a
    boolean addSearchWidget(android.database.sqlite.SQLiteDatabase,android.content.ContentValues) -> a
    boolean addClockWidget(android.database.sqlite.SQLiteDatabase,android.content.ContentValues) -> b
    boolean addAppWidget(android.database.sqlite.SQLiteDatabase,android.content.ContentValues,android.content.res.TypedArray,android.content.pm.PackageManager) -> a
    boolean addAppWidget(android.database.sqlite.SQLiteDatabase,android.content.ContentValues,android.content.ComponentName,int,int) -> a
    boolean addUriShortcut(android.database.sqlite.SQLiteDatabase,android.content.ContentValues,android.content.res.TypedArray) -> a
com.limemobile.app.launcher.provider.LauncherProvider$SqlArguments -> com.limemobile.app.launcher.provider.b:
    java.lang.String table -> a
    java.lang.String where -> b
    java.lang.String[] args -> c
com.limemobile.app.launcher.receiver.BootReceiver -> com.limemobile.app.launcher.receiver.BootReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.limemobile.app.launcher.receiver.InstallShortcutReceiver -> com.limemobile.app.launcher.receiver.InstallShortcutReceiver:
    int[] mCoordinates -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    boolean installShortcut(android.content.Context,android.content.Intent,int) -> a
    boolean findEmptyCell(android.content.Context,int[],int) -> a
com.limemobile.app.launcher.receiver.LauncherModel -> com.limemobile.app.launcher.receiver.LauncherModel:
    int mBatchSize -> e
    int mAllAppsLoadDelay -> f
    com.limemobile.app.launcher.LauncherApplication mApp -> g
    java.lang.Object mLock -> h
    com.limemobile.app.launcher.common.DeferredHandler mHandler -> i
    com.limemobile.app.launcher.receiver.LauncherModel$LoaderTask mLoaderTask -> j
    android.os.HandlerThread sWorkerThread -> k
    android.os.Handler sWorker -> l
    boolean mWorkspaceLoaded -> m
    boolean mAllAppsLoaded -> n
    java.lang.ref.WeakReference mCallbacks -> o
    com.limemobile.app.launcher.common.AllAppsList mAllAppsList -> p
    com.limemobile.app.launcher.util.IconCache mIconCache -> q
    java.util.ArrayList mItems -> a
    java.util.ArrayList mAppWidgets -> b
    java.util.HashMap mFolders -> c
    android.graphics.Bitmap mDefaultIcon -> r
    java.text.Collator sCollator -> s
    java.util.Comparator APP_NAME_COMPARATOR -> d
    android.graphics.Bitmap getFallbackIcon() -> a
    void resetAllApps() -> b
    void addOrMoveItemInDatabase(android.content.Context,com.limemobile.app.launcher.entity.ItemInfo,long,int,int,int) -> a
    void moveItemInDatabase(android.content.Context,com.limemobile.app.launcher.entity.ItemInfo,long,int,int,int) -> b
    boolean shortcutExists(android.content.Context,java.lang.String,android.content.Intent) -> a
    com.limemobile.app.launcher.entity.FolderInfo getFolderById(android.content.Context,java.util.HashMap,long) -> a
    void addItemToDatabase(android.content.Context,com.limemobile.app.launcher.entity.ItemInfo,long,int,int,int,boolean) -> a
    void updateItemInDatabase(android.content.Context,com.limemobile.app.launcher.entity.ItemInfo) -> a
    void deleteItemFromDatabase(android.content.Context,com.limemobile.app.launcher.entity.ItemInfo) -> b
    void deleteUserFolderContentsFromDatabase(android.content.Context,com.limemobile.app.launcher.entity.UserFolderInfo) -> a
    void deleteApplication(android.content.Context,com.limemobile.app.launcher.entity.ApplicationInfo) -> a
    void initialize(com.limemobile.app.launcher.receiver.LauncherModel$Callbacks) -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void startLoader(android.content.Context,boolean) -> a
    void stopLoader() -> c
    void enqueuePackageUpdated(com.limemobile.app.launcher.receiver.LauncherModel$PackageUpdatedTask) -> a
    com.limemobile.app.launcher.entity.ShortcutInfo getShortcutInfo(android.content.pm.PackageManager,android.content.Intent,android.content.Context) -> a
    com.limemobile.app.launcher.entity.ShortcutInfo getShortcutInfo(android.content.pm.PackageManager,android.content.Intent,android.content.Context,android.database.Cursor,int,int) -> a
    com.limemobile.app.launcher.entity.ShortcutInfo getShortcutInfo(android.database.Cursor,android.content.Context,int,int,int,int,int) -> a
    android.graphics.Bitmap getIconFromCursor(android.database.Cursor,int) -> a
    com.limemobile.app.launcher.entity.ShortcutInfo addShortcut(android.content.Context,android.content.Intent,com.limemobile.app.launcher.view.CellLayout$CellInfo,boolean) -> a
    com.limemobile.app.launcher.entity.ShortcutInfo infoFromShortcutIntent(android.content.Context,android.content.Intent) -> a
    void loadLiveFolderIcon(android.content.Context,android.database.Cursor,int,int,int,com.limemobile.app.launcher.entity.LiveFolderInfo) -> b
    void updateSavedIcon(android.content.Context,com.limemobile.app.launcher.entity.ShortcutInfo,android.database.Cursor,int) -> a
    com.limemobile.app.launcher.entity.UserFolderInfo findOrMakeUserFolder(java.util.HashMap,long) -> c
    com.limemobile.app.launcher.entity.LiveFolderInfo findOrMakeLiveFolder(java.util.HashMap,long) -> d
    java.text.Collator access$0() -> d
    void access$1(com.limemobile.app.launcher.receiver.LauncherModel,boolean) -> a
    com.limemobile.app.launcher.common.DeferredHandler access$2(com.limemobile.app.launcher.receiver.LauncherModel) -> a
    java.lang.ref.WeakReference access$3(com.limemobile.app.launcher.receiver.LauncherModel) -> b
    java.lang.Object access$4(com.limemobile.app.launcher.receiver.LauncherModel) -> c
    com.limemobile.app.launcher.receiver.LauncherModel$LoaderTask access$5(com.limemobile.app.launcher.receiver.LauncherModel) -> d
    void access$6(com.limemobile.app.launcher.receiver.LauncherModel,com.limemobile.app.launcher.receiver.LauncherModel$LoaderTask) -> a
    com.limemobile.app.launcher.entity.ShortcutInfo access$7(com.limemobile.app.launcher.receiver.LauncherModel,android.database.Cursor,android.content.Context,int,int,int,int,int) -> a
    com.limemobile.app.launcher.entity.UserFolderInfo access$8(java.util.HashMap,long) -> a
    com.limemobile.app.launcher.entity.LiveFolderInfo access$9(java.util.HashMap,long) -> b
    void access$10(android.content.Context,android.database.Cursor,int,int,int,com.limemobile.app.launcher.entity.LiveFolderInfo) -> a
    boolean access$11(com.limemobile.app.launcher.receiver.LauncherModel) -> e
    void access$12(com.limemobile.app.launcher.receiver.LauncherModel,boolean) -> b
    com.limemobile.app.launcher.common.AllAppsList access$13(com.limemobile.app.launcher.receiver.LauncherModel) -> f
    int access$14(com.limemobile.app.launcher.receiver.LauncherModel) -> g
    com.limemobile.app.launcher.util.IconCache access$15(com.limemobile.app.launcher.receiver.LauncherModel) -> h
    int access$16(com.limemobile.app.launcher.receiver.LauncherModel) -> i
    com.limemobile.app.launcher.LauncherApplication access$17(com.limemobile.app.launcher.receiver.LauncherModel) -> j
com.limemobile.app.launcher.receiver.LauncherModel$1 -> com.limemobile.app.launcher.receiver.a:
    int compare(com.limemobile.app.launcher.entity.ApplicationInfo,com.limemobile.app.launcher.entity.ApplicationInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.limemobile.app.launcher.receiver.LauncherModel$2 -> com.limemobile.app.launcher.receiver.b:
    android.content.ContentResolver val$cr -> a
    android.net.Uri val$uri -> b
    android.content.ContentValues val$values -> c
    void run() -> run
com.limemobile.app.launcher.receiver.LauncherModel$3 -> com.limemobile.app.launcher.receiver.c:
    android.content.ContentResolver val$cr -> a
    android.net.Uri val$uriToDelete -> b
    void run() -> run
com.limemobile.app.launcher.receiver.LauncherModel$Callbacks -> com.limemobile.app.launcher.receiver.d:
    boolean setLoadOnResume() -> i
    int getCurrentWorkspaceScreen() -> j
    void startBinding() -> k
    void bindItems(java.util.ArrayList,int,int) -> a
    void bindFolders(java.util.HashMap) -> a
    void finishBindingItems() -> l
    void bindAppWidget(com.limemobile.app.launcher.entity.LauncherAppWidgetInfo) -> b
    void bindAllApplications(java.util.ArrayList) -> a
    void bindAppsAdded(java.util.ArrayList) -> b
    void bindAppsUpdated(java.util.ArrayList) -> c
    void bindAppsRemoved(java.util.ArrayList,boolean) -> a
    boolean isAllAppsVisible() -> g
com.limemobile.app.launcher.receiver.LauncherModel$DisplayNameComparatorEx -> com.limemobile.app.launcher.receiver.e:
    java.text.Collator sCollator -> a
    android.content.pm.PackageManager mPM -> b
    int compare(android.content.pm.ResolveInfo,android.content.pm.ResolveInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.limemobile.app.launcher.receiver.LauncherModel$LoaderTask -> com.limemobile.app.launcher.receiver.f:
    android.content.Context mContext -> b
    boolean mIsLaunching -> c
    boolean mStopped -> d
    boolean mLoadAndBindStepFinished -> e
    com.limemobile.app.launcher.receiver.LauncherModel this$0 -> a
    boolean isLaunching() -> a
    void loadAndBindWorkspace() -> c
    void waitForIdle() -> d
    void run() -> run
    void stopLocked() -> b
    com.limemobile.app.launcher.receiver.LauncherModel$Callbacks tryGetCallbacks(com.limemobile.app.launcher.receiver.LauncherModel$Callbacks) -> a
    boolean checkItemPlacement(com.limemobile.app.launcher.entity.ItemInfo[][][],com.limemobile.app.launcher.entity.ItemInfo) -> a
    void loadWorkspace() -> e
    void bindWorkspace() -> f
    void loadAndBindAllApps() -> g
    void onlyBindAllApps() -> h
    void loadAllAppsByBatch() -> i
    void access$0(com.limemobile.app.launcher.receiver.LauncherModel$LoaderTask,boolean) -> a
    com.limemobile.app.launcher.receiver.LauncherModel access$1(com.limemobile.app.launcher.receiver.LauncherModel$LoaderTask) -> a
com.limemobile.app.launcher.receiver.LauncherModel$LoaderTask$1 -> com.limemobile.app.launcher.receiver.g:
    com.limemobile.app.launcher.receiver.LauncherModel$LoaderTask this$1 -> a
    void run() -> run
com.limemobile.app.launcher.receiver.LauncherModel$LoaderTask$10 -> com.limemobile.app.launcher.receiver.h:
    com.limemobile.app.launcher.receiver.LauncherModel$LoaderTask this$1 -> a
    com.limemobile.app.launcher.receiver.LauncherModel$Callbacks val$oldCallbacks -> b
    void run() -> run
com.limemobile.app.launcher.receiver.LauncherModel$LoaderTask$11 -> com.limemobile.app.launcher.receiver.i:
    com.limemobile.app.launcher.receiver.LauncherModel$LoaderTask this$1 -> a
    long val$t -> b
    void run() -> run
com.limemobile.app.launcher.receiver.LauncherModel$LoaderTask$12 -> com.limemobile.app.launcher.receiver.j:
    com.limemobile.app.launcher.receiver.LauncherModel$LoaderTask this$1 -> a
    com.limemobile.app.launcher.receiver.LauncherModel$Callbacks val$oldCallbacks -> b
    java.util.ArrayList val$list -> c
    void run() -> run
com.limemobile.app.launcher.receiver.LauncherModel$LoaderTask$13 -> com.limemobile.app.launcher.receiver.k:
    com.limemobile.app.launcher.receiver.LauncherModel$LoaderTask this$1 -> a
    com.limemobile.app.launcher.receiver.LauncherModel$Callbacks val$callbacks -> b
    boolean val$first -> c
    java.util.ArrayList val$added -> d
    void run() -> run
com.limemobile.app.launcher.receiver.LauncherModel$LoaderTask$2 -> com.limemobile.app.launcher.receiver.l:
    com.limemobile.app.launcher.receiver.LauncherModel$LoaderTask this$1 -> a
    void run() -> run
com.limemobile.app.launcher.receiver.LauncherModel$LoaderTask$3 -> com.limemobile.app.launcher.receiver.m:
    com.limemobile.app.launcher.receiver.LauncherModel$LoaderTask this$1 -> a
    void run() -> run
com.limemobile.app.launcher.receiver.LauncherModel$LoaderTask$4 -> com.limemobile.app.launcher.receiver.n:
    com.limemobile.app.launcher.receiver.LauncherModel$LoaderTask this$1 -> a
    com.limemobile.app.launcher.receiver.LauncherModel$Callbacks val$oldCallbacks -> b
    void run() -> run
com.limemobile.app.launcher.receiver.LauncherModel$LoaderTask$5 -> com.limemobile.app.launcher.receiver.o:
    com.limemobile.app.launcher.receiver.LauncherModel$LoaderTask this$1 -> a
    com.limemobile.app.launcher.receiver.LauncherModel$Callbacks val$oldCallbacks -> b
    int val$start -> c
    int val$chunkSize -> d
    void run() -> run
com.limemobile.app.launcher.receiver.LauncherModel$LoaderTask$6 -> com.limemobile.app.launcher.receiver.p:
    com.limemobile.app.launcher.receiver.LauncherModel$LoaderTask this$1 -> a
    com.limemobile.app.launcher.receiver.LauncherModel$Callbacks val$oldCallbacks -> b
    void run() -> run
com.limemobile.app.launcher.receiver.LauncherModel$LoaderTask$7 -> com.limemobile.app.launcher.receiver.q:
    com.limemobile.app.launcher.receiver.LauncherModel$LoaderTask this$1 -> a
    void run() -> run
com.limemobile.app.launcher.receiver.LauncherModel$LoaderTask$8 -> com.limemobile.app.launcher.receiver.r:
    com.limemobile.app.launcher.receiver.LauncherModel$LoaderTask this$1 -> a
    com.limemobile.app.launcher.receiver.LauncherModel$Callbacks val$oldCallbacks -> b
    com.limemobile.app.launcher.entity.LauncherAppWidgetInfo val$widget -> c
    void run() -> run
com.limemobile.app.launcher.receiver.LauncherModel$LoaderTask$9 -> com.limemobile.app.launcher.receiver.s:
    com.limemobile.app.launcher.receiver.LauncherModel$LoaderTask this$1 -> a
    com.limemobile.app.launcher.receiver.LauncherModel$Callbacks val$oldCallbacks -> b
    com.limemobile.app.launcher.entity.LauncherAppWidgetInfo val$widget -> c
    void run() -> run
com.limemobile.app.launcher.receiver.LauncherModel$PackageUpdatedTask -> com.limemobile.app.launcher.receiver.t:
    int mOp -> a
    java.lang.String[] mPackages -> b
    com.limemobile.app.launcher.receiver.LauncherModel this$0 -> c
    void run() -> run
    com.limemobile.app.launcher.receiver.LauncherModel access$0(com.limemobile.app.launcher.receiver.LauncherModel$PackageUpdatedTask) -> a
com.limemobile.app.launcher.receiver.LauncherModel$PackageUpdatedTask$1 -> com.limemobile.app.launcher.receiver.u:
    com.limemobile.app.launcher.receiver.LauncherModel$PackageUpdatedTask this$1 -> a
    com.limemobile.app.launcher.receiver.LauncherModel$Callbacks val$callbacks -> b
    java.util.ArrayList val$addedFinal -> c
    void run() -> run
com.limemobile.app.launcher.receiver.LauncherModel$PackageUpdatedTask$2 -> com.limemobile.app.launcher.receiver.v:
    com.limemobile.app.launcher.receiver.LauncherModel$PackageUpdatedTask this$1 -> a
    com.limemobile.app.launcher.receiver.LauncherModel$Callbacks val$callbacks -> b
    java.util.ArrayList val$modifiedFinal -> c
    void run() -> run
com.limemobile.app.launcher.receiver.LauncherModel$PackageUpdatedTask$3 -> com.limemobile.app.launcher.receiver.w:
    com.limemobile.app.launcher.receiver.LauncherModel$PackageUpdatedTask this$1 -> a
    com.limemobile.app.launcher.receiver.LauncherModel$Callbacks val$callbacks -> b
    java.util.ArrayList val$removedFinal -> c
    boolean val$permanent -> d
    void run() -> run
com.limemobile.app.launcher.receiver.UninstallShortcutReceiver -> com.limemobile.app.launcher.receiver.UninstallShortcutReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.limemobile.app.launcher.service.KeyguardService -> com.limemobile.app.launcher.service.KeyguardService:
    android.telephony.TelephonyManager mTelephonyManager -> a
    android.app.KeyguardManager mKeyguardManager -> b
    android.app.KeyguardManager$KeyguardLock mKeyguardLock -> c
    int mPhoneState -> d
    boolean isCalling -> e
    boolean isCharging -> f
    boolean isDisableKeyguard -> g
    android.telephony.PhoneStateListener mPhoneStateListener -> h
    android.content.BroadcastReceiver mInternalReceiver -> i
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void access$0(com.limemobile.app.launcher.service.KeyguardService,boolean) -> a
    void access$1(com.limemobile.app.launcher.service.KeyguardService,int) -> a
    boolean access$2(com.limemobile.app.launcher.service.KeyguardService) -> a
    void access$3(com.limemobile.app.launcher.service.KeyguardService,boolean) -> b
com.limemobile.app.launcher.service.KeyguardService$1 -> com.limemobile.app.launcher.service.a:
    com.limemobile.app.launcher.service.KeyguardService this$0 -> a
    void onCallStateChanged(int,java.lang.String) -> onCallStateChanged
com.limemobile.app.launcher.service.KeyguardService$2 -> com.limemobile.app.launcher.service.b:
    com.limemobile.app.launcher.service.KeyguardService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.limemobile.app.launcher.util.Hanzi2Pinyin1 -> com.limemobile.app.launcher.e.a:
    char[] UNIHANS -> a
    byte[][] PINYINS -> b
    java.text.Collator COLLATOR -> c
    com.limemobile.app.launcher.util.Hanzi2Pinyin1 sInstance -> d
    boolean mHasChinaCollator -> e
    com.limemobile.app.launcher.util.Hanzi2Pinyin1 getInstance() -> a
    com.limemobile.app.launcher.util.Hanzi2Pinyin1$Token getToken(char) -> a
    java.util.ArrayList get(java.lang.String) -> a
    void addToken(java.lang.StringBuilder,java.util.ArrayList,int) -> a
com.limemobile.app.launcher.util.Hanzi2Pinyin1$Token -> com.limemobile.app.launcher.e.b:
    int type -> a
    java.lang.String source -> b
    java.lang.String target -> c
com.limemobile.app.launcher.util.Hanzi2Pinyin14 -> com.limemobile.app.launcher.e.c:
    char[] UNIHANS -> a
    byte[][] PINYINS -> b
    java.text.Collator COLLATOR -> c
    com.limemobile.app.launcher.util.Hanzi2Pinyin14 sInstance -> d
    boolean mHasChinaCollator -> e
    com.limemobile.app.launcher.util.Hanzi2Pinyin14 getInstance() -> a
    com.limemobile.app.launcher.util.Hanzi2Pinyin1$Token getToken(char) -> a
    java.util.ArrayList get(java.lang.String) -> a
    void addToken(java.lang.StringBuilder,java.util.ArrayList,int) -> a
com.limemobile.app.launcher.util.IconCache -> com.limemobile.app.launcher.e.d:
    android.graphics.Bitmap mDefaultIcon -> a
    com.limemobile.app.launcher.LauncherApplication mContext -> b
    android.content.pm.PackageManager mPackageManager -> c
    com.limemobile.app.launcher.util.Utilities$BubbleText mBubble -> d
    java.util.HashMap mCache -> e
    java.util.HashMap mHotseatCache -> f
    android.graphics.Bitmap makeDefaultIcon() -> b
    void remove(android.content.ComponentName) -> a
    void flushHotseat() -> a
    void getTitleAndIcon(com.limemobile.app.launcher.entity.ApplicationInfo,android.content.pm.ResolveInfo) -> a
    android.graphics.Bitmap getIcon(android.content.Intent) -> a
    android.graphics.Bitmap getIcon(android.content.ComponentName,android.content.pm.ResolveInfo) -> a
    boolean isDefaultIcon(android.graphics.Bitmap) -> a
    com.limemobile.app.launcher.util.IconCache$CacheEntry cacheLocked(android.content.ComponentName,android.content.pm.ResolveInfo) -> b
    android.graphics.Bitmap getReflectionIcon(android.content.Intent,android.graphics.drawable.Drawable) -> a
    android.graphics.Bitmap createReflection(android.graphics.Bitmap,int,int,int,int) -> a
    android.graphics.Bitmap createReflection(android.graphics.Bitmap,int,int,int,int,int) -> a
com.limemobile.app.launcher.util.IconCache$CacheEntry -> com.limemobile.app.launcher.e.e:
    android.graphics.Bitmap icon -> a
    java.lang.String title -> b
    android.graphics.Bitmap titleBitmap -> c
com.limemobile.app.launcher.util.ManageWakeLock -> com.limemobile.app.launcher.e.f:
    android.os.PowerManager$WakeLock myWakeLock -> a
    android.os.PowerManager$WakeLock myPartialWakeLock -> b
    void acquirePartial(android.content.Context) -> a
    void releasePartial() -> a
com.limemobile.app.launcher.util.PinyinUtil -> com.limemobile.app.launcher.e.g:
    java.lang.String toString(java.lang.String) -> a
    java.lang.String getFirstLetter(java.lang.String) -> b
com.limemobile.app.launcher.util.StatusBarHelper -> com.limemobile.app.launcher.e.h:
    void expand(android.content.Context) -> a
com.limemobile.app.launcher.util.Utilities -> com.limemobile.app.launcher.e.i:
    int sIconWidth -> c
    int sIconHeight -> d
    int sIconTextureWidth -> e
    int sIconTextureHeight -> f
    android.graphics.Paint sPaint -> g
    android.graphics.Paint sBlurPaint -> h
    android.graphics.Paint sGlowColorPressedPaint -> i
    android.graphics.Paint sGlowColorFocusedPaint -> j
    android.graphics.Paint sDisabledPaint -> k
    android.graphics.Rect sBounds -> l
    android.graphics.Rect sOldBounds -> m
    android.graphics.Canvas sCanvas -> n
    int[] sColors -> a
    int sColorIndex -> b
    android.graphics.Bitmap createIconBitmap(android.graphics.drawable.Drawable,android.content.Context) -> a
    android.graphics.Bitmap resampleIconBitmap(android.graphics.Bitmap,android.content.Context) -> a
    void initStatics(android.content.Context) -> a
    int roundToPow2(int) -> a
com.limemobile.app.launcher.util.Utilities$BubbleText -> com.limemobile.app.launcher.e.j:
    android.text.TextPaint mTextPaint -> a
    android.graphics.RectF mBubbleRect -> b
    float mTextWidth -> c
    int mLeading -> d
    int mFirstLineY -> e
    int mLineHeight -> f
    int mBitmapWidth -> g
    int mBitmapHeight -> h
    int mDensity -> i
    android.graphics.Bitmap createTextBitmap(java.lang.String) -> a
com.limemobile.app.launcher.view.AllAppsView -> com.limemobile.app.launcher.view.a:
    void setLauncher(com.limemobile.app.launcher.activity.Launcher) -> setLauncher
    void setDragController(com.limemobile.app.launcher.view.DragController) -> setDragController
    void zoom(float,boolean) -> a
    boolean isVisible() -> a
    boolean isOpaque() -> isOpaque
    void setApps(java.util.ArrayList) -> setApps
    void addApps(java.util.ArrayList) -> a
    void removeApps(java.util.ArrayList) -> b
    void updateApps(java.util.ArrayList) -> c
    void surrender() -> b
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    com.limemobile.app.launcher.view.AllAppsView$MenuType getOptionsMenuType() -> c
com.limemobile.app.launcher.view.AllAppsView$MenuType -> com.limemobile.app.launcher.view.b:
    com.limemobile.app.launcher.view.AllAppsView$MenuType IconMenu -> a
    com.limemobile.app.launcher.view.AllAppsView$MenuType ExpendedMenu -> b
    com.limemobile.app.launcher.view.AllAppsView$MenuType[] ENUM$VALUES -> c
    com.limemobile.app.launcher.view.AllAppsView$MenuType[] values() -> values
    com.limemobile.app.launcher.view.AllAppsView$MenuType valueOf(java.lang.String) -> valueOf
com.limemobile.app.launcher.view.BubbleTextView -> com.limemobile.app.launcher.view.BubbleTextView:
    android.graphics.RectF mRect -> a
    android.graphics.Paint mPaint -> b
    boolean mBackgroundSizeChanged -> c
    android.graphics.drawable.Drawable mBackground -> d
    float mCornerRadius -> e
    float mPaddingH -> f
    float mPaddingV -> g
    void init() -> a
    boolean setFrame(int,int,int,int) -> setFrame
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    void draw(android.graphics.Canvas) -> draw
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
com.limemobile.app.launcher.view.CellLayout -> com.limemobile.app.launcher.view.CellLayout:
    boolean mPortrait -> c
    int mCellWidth -> d
    int mCellHeight -> e
    int mLongAxisStartPadding -> f
    int mLongAxisEndPadding -> g
    int mShortAxisStartPadding -> h
    int mShortAxisEndPadding -> i
    int mShortAxisCells -> j
    int mLongAxisCells -> k
    int mWidthGap -> l
    int mHeightGap -> m
    android.graphics.Rect mRect -> n
    com.limemobile.app.launcher.view.CellLayout$CellInfo mCellInfo -> o
    int[] mCellXY -> a
    boolean[][] mOccupied -> b
    android.graphics.RectF mDragRect -> p
    boolean mDirtyTag -> q
    boolean mLastDownOnOccupiedCell -> r
    android.app.WallpaperManager mWallpaperManager -> s
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void cancelLongPress() -> cancelLongPress
    int getCountX() -> a
    int getCountY() -> b
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    void onAttachedToWindow() -> onAttachedToWindow
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    com.limemobile.app.launcher.view.CellLayout$CellInfo getTag() -> c
    void findIntersectingVacantCells(com.limemobile.app.launcher.view.CellLayout$CellInfo,int,int,int,int,boolean[][]) -> b
    void findVacantCell(android.graphics.Rect,int,int,boolean[][],com.limemobile.app.launcher.view.CellLayout$CellInfo) -> a
    void addVacantCell(android.graphics.Rect,com.limemobile.app.launcher.view.CellLayout$CellInfo) -> a
    boolean isColumnEmpty(int,int,int,boolean[][]) -> a
    boolean isRowEmpty(int,int,int,boolean[][]) -> b
    com.limemobile.app.launcher.view.CellLayout$CellInfo findAllVacantCells(boolean[],android.view.View) -> a
    void pointToCellExact(int,int,int[]) -> a
    void cellToPoint(int,int,int[]) -> b
    int getLeftPadding() -> d
    int getTopPadding() -> e
    int getRightPadding() -> f
    int getBottomPadding() -> g
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setChildrenDrawingCacheEnabled(boolean) -> setChildrenDrawingCacheEnabled
    void setChildrenDrawnWithCacheEnabled(boolean) -> setChildrenDrawnWithCacheEnabled
    int[] findNearestVacantArea(int,int,int,int,com.limemobile.app.launcher.view.CellLayout$CellInfo,int[]) -> a
    void onDropChild(android.view.View,int[]) -> a
    void onDropAborted(android.view.View) -> a
    void onDragChild(android.view.View) -> b
    int[] rectToCell(int,int) -> a
    boolean findVacantCell(int[],int,int,int,int,boolean[][]) -> a
    boolean[] getOccupiedCells() -> h
    void findOccupiedCells(int,int,boolean[][],android.view.View) -> a
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean lastDownOnOccupiedCell() -> i
    java.lang.Object getTag() -> getTag
    void access$1(com.limemobile.app.launcher.view.CellLayout$CellInfo,int,int,int,int,boolean[][]) -> a
com.limemobile.app.launcher.view.CellLayout$CellInfo -> com.limemobile.app.launcher.view.c:
    android.view.View cell -> a
    int cellX -> b
    int cellY -> c
    int spanX -> d
    int spanY -> e
    int screen -> f
    boolean valid -> g
    java.util.ArrayList vacantCells -> h
    int maxVacantSpanX -> i
    int maxVacantSpanXSpanY -> j
    int maxVacantSpanY -> k
    int maxVacantSpanYSpanX -> l
    android.graphics.Rect current -> m
    void clearVacantCells() -> a
    void findVacantCellsFromOccupied(boolean[],int,int) -> a
    boolean findCellForSpan(int[],int,int) -> a
    boolean findCellForSpan(int[],int,int,boolean) -> a
    java.lang.String toString() -> toString
com.limemobile.app.launcher.view.CellLayout$CellInfo$VacantCell -> com.limemobile.app.launcher.view.d:
    int cellX -> a
    int cellY -> b
    int spanX -> c
    int spanY -> d
    java.lang.Object sLock -> e
    int sAcquiredCount -> f
    com.limemobile.app.launcher.view.CellLayout$CellInfo$VacantCell sRoot -> g
    com.limemobile.app.launcher.view.CellLayout$CellInfo$VacantCell next -> h
    com.limemobile.app.launcher.view.CellLayout$CellInfo$VacantCell acquire() -> a
    void release() -> b
    java.lang.String toString() -> toString
com.limemobile.app.launcher.view.CellLayout$LayoutParams -> com.limemobile.app.launcher.view.CellLayout$LayoutParams:
    int cellX -> a
    int cellY -> b
    int cellHSpan -> c
    int cellVSpan -> d
    boolean isDragging -> e
    int x -> f
    int y -> g
    boolean regenerateId -> h
    boolean dropped -> i
    void setup(int,int,int,int,int,int) -> a
com.limemobile.app.launcher.view.ClippedImageView -> com.limemobile.app.launcher.view.ClippedImageView:
    int mZone -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.limemobile.app.launcher.view.DeleteZone -> com.limemobile.app.launcher.view.DeleteZone:
    int[] mLocation -> a
    com.limemobile.app.launcher.activity.Launcher mLauncher -> b
    boolean mTrashMode -> c
    android.view.animation.AnimationSet mInAnimation -> d
    android.view.animation.AnimationSet mOutAnimation -> e
    android.view.animation.Animation mHandleInAnimation -> f
    android.view.animation.Animation mHandleOutAnimation -> g
    int mOrientation -> h
    com.limemobile.app.launcher.view.DragController mDragController -> i
    android.graphics.RectF mRegion -> j
    android.graphics.drawable.TransitionDrawable mTransition -> k
    android.view.View mHandle -> l
    android.graphics.Paint mTrashPaint -> m
    void onFinishInflate() -> onFinishInflate
    boolean acceptDrop(com.limemobile.app.launcher.view.DragSource,int,int,int,int,com.limemobile.app.launcher.view.DragView,java.lang.Object) -> a
    void onDrop(com.limemobile.app.launcher.view.DragSource,int,int,int,int,com.limemobile.app.launcher.view.DragView,java.lang.Object) -> b
    void onDragEnter(com.limemobile.app.launcher.view.DragSource,int,int,int,int,com.limemobile.app.launcher.view.DragView,java.lang.Object) -> c
    void onDragOver(com.limemobile.app.launcher.view.DragSource,int,int,int,int,com.limemobile.app.launcher.view.DragView,java.lang.Object) -> d
    void onDragExit(com.limemobile.app.launcher.view.DragSource,int,int,int,int,com.limemobile.app.launcher.view.DragView,java.lang.Object) -> e
    void onDragStart(com.limemobile.app.launcher.view.DragSource,java.lang.Object,int) -> a
    void onDragEnd() -> a
    void createAnimations() -> b
    void setLauncher(com.limemobile.app.launcher.activity.Launcher) -> setLauncher
    void setDragController(com.limemobile.app.launcher.view.DragController) -> setDragController
    void setHandle(android.view.View) -> setHandle
com.limemobile.app.launcher.view.DeleteZone$1 -> com.limemobile.app.launcher.view.e:
    com.limemobile.app.launcher.view.DeleteZone this$0 -> a
    com.limemobile.app.launcher.view.LauncherAppWidgetHost val$appWidgetHost -> b
    com.limemobile.app.launcher.entity.LauncherAppWidgetInfo val$launcherAppWidgetInfo -> c
    void run() -> run
com.limemobile.app.launcher.view.DeleteZone$FastAnimationSet -> com.limemobile.app.launcher.view.f:
    boolean willChangeTransformationMatrix() -> willChangeTransformationMatrix
    boolean willChangeBounds() -> willChangeBounds
com.limemobile.app.launcher.view.DeleteZone$FastTranslateAnimation -> com.limemobile.app.launcher.view.g:
    boolean willChangeTransformationMatrix() -> willChangeTransformationMatrix
    boolean willChangeBounds() -> willChangeBounds
com.limemobile.app.launcher.view.DragController -> com.limemobile.app.launcher.view.h:
    int DRAG_ACTION_MOVE -> a
    int DRAG_ACTION_COPY -> b
    android.content.Context mContext -> c
    android.os.Handler mHandler -> d
    android.os.Vibrator mVibrator -> e
    android.graphics.Rect mRectTemp -> f
    int[] mCoordinatesTemp -> g
    boolean mDragging -> h
    float mMotionDownX -> i
    float mMotionDownY -> j
    android.util.DisplayMetrics mDisplayMetrics -> k
    android.view.View mOriginator -> l
    float mTouchOffsetX -> m
    float mTouchOffsetY -> n
    int mScrollZone -> o
    com.limemobile.app.launcher.view.DragSource mDragSource -> p
    java.lang.Object mDragInfo -> q
    com.limemobile.app.launcher.view.DragView mDragView -> r
    java.util.ArrayList mDropTargets -> s
    com.limemobile.app.launcher.view.DragController$DragListener mListener -> t
    android.os.IBinder mWindowToken -> u
    android.view.View mScrollView -> v
    android.view.View mMoveTarget -> w
    com.limemobile.app.launcher.view.DragScroller mDragScroller -> x
    int mScrollState -> y
    com.limemobile.app.launcher.view.DragController$ScrollRunnable mScrollRunnable -> z
    android.graphics.RectF mDeleteRegion -> A
    com.limemobile.app.launcher.view.DropTarget mLastDropTarget -> B
    android.view.inputmethod.InputMethodManager mInputMethodManager -> C
    void startDrag(android.view.View,com.limemobile.app.launcher.view.DragSource,java.lang.Object,int) -> a
    void startDrag(android.graphics.Bitmap,int,int,int,int,int,int,com.limemobile.app.launcher.view.DragSource,java.lang.Object,int) -> a
    android.graphics.Bitmap getViewBitmap(android.view.View) -> c
    boolean dispatchKeyEvent(android.view.KeyEvent) -> a
    void cancelDrag() -> a
    void endDrag() -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> a
    void setMoveTarget(android.view.View) -> a
    boolean dispatchUnhandledMove(android.view.View,int) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> b
    boolean drop(float,float) -> a
    com.limemobile.app.launcher.view.DropTarget findDropTarget(int,int,int[]) -> a
    void recordScreenSize() -> c
    int clamp(int,int,int) -> a
    void setDragScoller(com.limemobile.app.launcher.view.DragScroller) -> a
    void setWindowToken(android.os.IBinder) -> a
    void setDragListener(com.limemobile.app.launcher.view.DragController$DragListener) -> a
    void addDropTarget(com.limemobile.app.launcher.view.DropTarget) -> a
    void removeDropTarget(com.limemobile.app.launcher.view.DropTarget) -> b
    void setScrollView(android.view.View) -> b
    void setDeleteRegion(android.graphics.RectF) -> a
    com.limemobile.app.launcher.view.DragScroller access$0(com.limemobile.app.launcher.view.DragController) -> a
    void access$1(com.limemobile.app.launcher.view.DragController,int) -> a
com.limemobile.app.launcher.view.DragController$DragListener -> com.limemobile.app.launcher.view.i:
    void onDragStart(com.limemobile.app.launcher.view.DragSource,java.lang.Object,int) -> a
    void onDragEnd() -> a
com.limemobile.app.launcher.view.DragController$ScrollRunnable -> com.limemobile.app.launcher.view.j:
    int mDirection -> b
    com.limemobile.app.launcher.view.DragController this$0 -> a
    void run() -> run
    void setDirection(int) -> a
com.limemobile.app.launcher.view.DragLayer -> com.limemobile.app.launcher.view.DragLayer:
    com.limemobile.app.launcher.view.DragController mDragController -> a
    void setDragController(com.limemobile.app.launcher.view.DragController) -> setDragController
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean dispatchUnhandledMove(android.view.View,int) -> dispatchUnhandledMove
com.limemobile.app.launcher.view.DragScroller -> com.limemobile.app.launcher.view.k:
    void scrollLeft() -> a
    void scrollRight() -> b
com.limemobile.app.launcher.view.DragSource -> com.limemobile.app.launcher.view.l:
    void onDropCompleted(android.view.View,boolean) -> a
com.limemobile.app.launcher.view.DragView -> com.limemobile.app.launcher.view.DragView:
    android.graphics.Bitmap mBitmap -> b
    android.graphics.Paint mPaint -> c
    int mRegistrationX -> d
    int mRegistrationY -> e
    com.limemobile.app.launcher.common.SymmetricalLinearTween mTween -> a
    float mScale -> f
    float mAnimationScale -> g
    android.view.WindowManager$LayoutParams mLayoutParams -> h
    android.view.WindowManager mWindowManager -> i
    void onMeasure(int,int) -> onMeasure
    void onDraw(android.graphics.Canvas) -> onDraw
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onTweenValueChanged(float,float) -> a
    void onTweenStarted() -> a
    void onTweenFinished() -> b
    void setPaint(android.graphics.Paint) -> setPaint
    void show(android.os.IBinder,int,int) -> a
    void move(int,int) -> a
    void remove() -> c
com.limemobile.app.launcher.view.DropTarget -> com.limemobile.app.launcher.view.m:
    void onDrop(com.limemobile.app.launcher.view.DragSource,int,int,int,int,com.limemobile.app.launcher.view.DragView,java.lang.Object) -> b
    void onDragEnter(com.limemobile.app.launcher.view.DragSource,int,int,int,int,com.limemobile.app.launcher.view.DragView,java.lang.Object) -> c
    void onDragOver(com.limemobile.app.launcher.view.DragSource,int,int,int,int,com.limemobile.app.launcher.view.DragView,java.lang.Object) -> d
    void onDragExit(com.limemobile.app.launcher.view.DragSource,int,int,int,int,com.limemobile.app.launcher.view.DragView,java.lang.Object) -> e
    boolean acceptDrop(com.limemobile.app.launcher.view.DragSource,int,int,int,int,com.limemobile.app.launcher.view.DragView,java.lang.Object) -> a
    void getHitRect(android.graphics.Rect) -> getHitRect
    void getLocationOnScreen(int[]) -> getLocationOnScreen
    int getLeft() -> getLeft
    int getTop() -> getTop
com.limemobile.app.launcher.view.FastBitmapDrawable -> com.limemobile.app.launcher.view.n:
    android.graphics.Bitmap mBitmap -> a
    int mWidth -> b
    int mHeight -> c
    void draw(android.graphics.Canvas) -> draw
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
com.limemobile.app.launcher.view.Folder -> com.limemobile.app.launcher.view.Folder:
    android.widget.AbsListView mContent -> a
    com.limemobile.app.launcher.view.DragController mDragController -> b
    com.limemobile.app.launcher.activity.Launcher mLauncher -> c
    android.widget.Button mCloseButton -> d
    com.limemobile.app.launcher.entity.FolderInfo mInfo -> e
    com.limemobile.app.launcher.entity.ShortcutInfo mDragItem -> f
    void onFinishInflate() -> onFinishInflate
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onClick(android.view.View) -> onClick
    boolean onLongClick(android.view.View) -> onLongClick
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    void setDragController(com.limemobile.app.launcher.view.DragController) -> setDragController
    void onDropCompleted(android.view.View,boolean) -> a
    void setContentAdapter(android.widget.BaseAdapter) -> a
    void notifyDataSetChanged() -> a
    void setLauncher(com.limemobile.app.launcher.activity.Launcher) -> setLauncher
    com.limemobile.app.launcher.entity.FolderInfo getInfo() -> b
    void onOpen() -> c
    void onClose() -> d
    void bind(com.limemobile.app.launcher.entity.FolderInfo) -> a
com.limemobile.app.launcher.view.FolderIcon -> com.limemobile.app.launcher.view.FolderIcon:
    com.limemobile.app.launcher.entity.UserFolderInfo mInfo -> a
    com.limemobile.app.launcher.activity.Launcher mLauncher -> b
    android.graphics.drawable.Drawable mCloseIcon -> c
    android.graphics.drawable.Drawable mOpenIcon -> d
    com.limemobile.app.launcher.view.FolderIcon fromXml(int,com.limemobile.app.launcher.activity.Launcher,android.view.ViewGroup,com.limemobile.app.launcher.entity.UserFolderInfo) -> a
    boolean acceptDrop(com.limemobile.app.launcher.view.DragSource,int,int,int,int,com.limemobile.app.launcher.view.DragView,java.lang.Object) -> a
    void onDrop(com.limemobile.app.launcher.view.DragSource,int,int,int,int,com.limemobile.app.launcher.view.DragView,java.lang.Object) -> b
    void onDragEnter(com.limemobile.app.launcher.view.DragSource,int,int,int,int,com.limemobile.app.launcher.view.DragView,java.lang.Object) -> c
    void onDragOver(com.limemobile.app.launcher.view.DragSource,int,int,int,int,com.limemobile.app.launcher.view.DragView,java.lang.Object) -> d
    void onDragExit(com.limemobile.app.launcher.view.DragSource,int,int,int,int,com.limemobile.app.launcher.view.DragView,java.lang.Object) -> e
com.limemobile.app.launcher.view.HTCSenseLockScreenView -> com.limemobile.app.launcher.view.HTCSenseLockScreenView:
    android.content.Context mContext -> b
    android.widget.ImageView mSenseUnlock -> c
    android.widget.ImageView mSensePanel -> d
    android.widget.ImageView mSenseLockCircle -> e
    com.limemobile.app.launcher.view.HTCSenseLockScreenView$OnTriggeredListener mOnTriggeredListener -> f
    android.graphics.drawable.BitmapDrawable mRingDrawable -> g
    android.graphics.drawable.BitmapDrawable mRingAppDrawable -> h
    android.graphics.drawable.BitmapDrawable mRingAppOnDrawable -> i
    android.graphics.drawable.BitmapDrawable mRingUnlockDrawable -> j
    android.graphics.drawable.BitmapDrawable mSenseAppBgDrawable -> k
    float mDensity -> l
    boolean mDragRing -> m
    boolean mDragShortcut -> n
    boolean mShortcutTriggered -> o
    boolean mUnlockTriggered -> p
    boolean mCalculateRect -> q
    boolean mAnimationPlaying -> r
    float mShortcutIconWidth -> s
    float mShortcutIconHeight -> t
    float mShortcutBasedHeight -> u
    float mUnlockTriggeredHeight -> v
    float mIconSpacing -> w
    android.view.animation.Animation mZoomEnterAnim -> x
    android.graphics.Rect mRingBound -> y
    com.limemobile.app.launcher.view.HTCSenseLockScreenView$ShortcutInfo mDraggingShortcut -> z
    java.util.ArrayList mShortcuts -> A
    boolean $assertionsDisabled -> a
    void onFinishInflate() -> onFinishInflate
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void triggered(android.content.Intent) -> a
    void startDragShortcut(com.limemobile.app.launcher.view.HTCSenseLockScreenView$ShortcutInfo) -> a
    void replaceRing(int,int) -> a
    void replaceShortcut(com.limemobile.app.launcher.view.HTCSenseLockScreenView$ShortcutInfo,int,int) -> a
    void resetRect() -> a
    void loadBitmapDrawable() -> b
    void unloadBitmapDrawable() -> c
    void setOnTriggeredListener(com.limemobile.app.launcher.view.HTCSenseLockScreenView$OnTriggeredListener) -> setOnTriggeredListener
    android.widget.ImageView access$0(com.limemobile.app.launcher.view.HTCSenseLockScreenView) -> a
    boolean access$1(com.limemobile.app.launcher.view.HTCSenseLockScreenView) -> b
    com.limemobile.app.launcher.view.HTCSenseLockScreenView$OnTriggeredListener access$2(com.limemobile.app.launcher.view.HTCSenseLockScreenView) -> c
    boolean access$3(com.limemobile.app.launcher.view.HTCSenseLockScreenView) -> d
    void access$4(com.limemobile.app.launcher.view.HTCSenseLockScreenView,boolean) -> a
    void access$5(com.limemobile.app.launcher.view.HTCSenseLockScreenView,boolean) -> b
com.limemobile.app.launcher.view.HTCSenseLockScreenView$1 -> com.limemobile.app.launcher.view.o:
    com.limemobile.app.launcher.view.HTCSenseLockScreenView this$0 -> a
    android.content.Intent val$intent -> b
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.limemobile.app.launcher.view.HTCSenseLockScreenView$OnTriggeredListener -> com.limemobile.app.launcher.view.p:
    void OnUnLockTriggered() -> a
    void OnShortcutTriggered(android.content.Intent) -> a
com.limemobile.app.launcher.view.HTCSenseLockScreenView$ShortcutInfo -> com.limemobile.app.launcher.view.q:
    android.graphics.Rect bound -> a
    android.graphics.drawable.BitmapDrawable drawable -> b
    android.content.Intent intent -> c
com.limemobile.app.launcher.view.HTCSenseTimeDateView -> com.limemobile.app.launcher.view.HTCSenseTimeDateView:
    android.content.Context mContext -> a
    java.util.Calendar mCalendar -> b
    java.lang.String mFormat -> c
    com.limemobile.app.launcher.view.HTCSenseTimeDateView$HTCSenseTimeView mTimeView -> d
    android.widget.TextView mAmPmView -> e
    android.widget.TextView mDateView -> f
    android.widget.TextView mWeatherTextView -> g
    android.widget.ImageView mWeatherImgView -> h
    java.lang.String mAmString -> i
    java.lang.String mPmString -> j
    boolean mReceiverRegistered -> k
    android.content.BroadcastReceiver mReceiver -> l
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFinishInflate() -> onFinishInflate
    void setShowAmPm(boolean) -> a
    void setIsMorning(boolean) -> b
    void updateTime() -> a
    void access$0(com.limemobile.app.launcher.view.HTCSenseTimeDateView) -> a
com.limemobile.app.launcher.view.HTCSenseTimeDateView$1 -> com.limemobile.app.launcher.view.r:
    com.limemobile.app.launcher.view.HTCSenseTimeDateView this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.limemobile.app.launcher.view.HTCSenseTimeDateView$HTCSenseTimeView -> com.limemobile.app.launcher.view.HTCSenseTimeDateView$HTCSenseTimeView:
    java.util.HashMap mNumberDrawables -> a
    int mIconWidth -> b
    int mIconHeight -> c
    void onMeasure(int,int) -> onMeasure
    void onFinishInflate() -> onFinishInflate
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onDraw(android.graphics.Canvas) -> onDraw
com.limemobile.app.launcher.view.HandleView -> com.limemobile.app.launcher.view.HandleView:
    com.limemobile.app.launcher.activity.Launcher mLauncher -> a
    int mOrientation -> b
    android.view.View focusSearch(int) -> focusSearch
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setLauncher(com.limemobile.app.launcher.activity.Launcher) -> setLauncher
com.limemobile.app.launcher.view.IndicatorView -> com.limemobile.app.launcher.view.IndicatorView:
    android.content.Context mContext -> a
    int mCurrent -> b
    int mTotal -> c
    android.graphics.drawable.BitmapDrawable mNormalIndicator -> d
    android.graphics.drawable.BitmapDrawable mSelectedIndicator -> e
    void init(android.content.Context) -> a
    void setIndicator(int) -> setIndicator
    void setTotalCount(int) -> setTotalCount
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onDetachedFromWindow() -> onDetachedFromWindow
com.limemobile.app.launcher.view.LauncherAppWidgetHost -> com.limemobile.app.launcher.view.s:
    android.appwidget.AppWidgetHostView onCreateView(android.content.Context,int,android.appwidget.AppWidgetProviderInfo) -> onCreateView
com.limemobile.app.launcher.view.LauncherAppWidgetHostView -> com.limemobile.app.launcher.view.LauncherAppWidgetHostView:
    boolean mHasPerformedLongPress -> a
    com.limemobile.app.launcher.view.LauncherAppWidgetHostView$CheckForLongPress mPendingCheckForLongPress -> b
    android.view.LayoutInflater mInflater -> c
    android.view.View getErrorView() -> getErrorView
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void postCheckForLongClick() -> a
    void cancelLongPress() -> cancelLongPress
    int access$0(com.limemobile.app.launcher.view.LauncherAppWidgetHostView) -> a
    boolean access$1(com.limemobile.app.launcher.view.LauncherAppWidgetHostView) -> b
    void access$2(com.limemobile.app.launcher.view.LauncherAppWidgetHostView,boolean) -> a
com.limemobile.app.launcher.view.LauncherAppWidgetHostView$CheckForLongPress -> com.limemobile.app.launcher.view.t:
    int mOriginalWindowAttachCount -> b
    com.limemobile.app.launcher.view.LauncherAppWidgetHostView this$0 -> a
    void run() -> run
    void rememberWindowAttachCount() -> a
com.limemobile.app.launcher.view.LetterFilterView -> com.limemobile.app.launcher.view.LetterFilterView:
    java.lang.String[] mLetters -> a
    com.limemobile.app.launcher.view.LetterFilterView$OnTouchingLetterChangedListener onTouchingLetterChangedListener -> b
    int choose -> c
    android.graphics.Paint mPaint -> d
    boolean mFocused -> e
    void init(android.content.Context) -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setOnTouchingLetterChangedListener(com.limemobile.app.launcher.view.LetterFilterView$OnTouchingLetterChangedListener) -> setOnTouchingLetterChangedListener
com.limemobile.app.launcher.view.LetterFilterView$OnTouchingLetterChangedListener -> com.limemobile.app.launcher.view.u:
    void onTouchingLetterChanged(java.lang.String) -> a
com.limemobile.app.launcher.view.LiveFolder -> com.limemobile.app.launcher.view.LiveFolder:
    android.os.AsyncTask mLoadingTask -> g
    com.limemobile.app.launcher.view.LiveFolder fromXml(android.content.Context,com.limemobile.app.launcher.entity.FolderInfo) -> a
    boolean isDisplayModeList(com.limemobile.app.launcher.entity.FolderInfo) -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    void bind(com.limemobile.app.launcher.entity.FolderInfo) -> a
    void onOpen() -> c
    void onClose() -> d
com.limemobile.app.launcher.view.LiveFolder$FolderLoadingTask -> com.limemobile.app.launcher.view.v:
    java.lang.ref.WeakReference mFolder -> a
    com.limemobile.app.launcher.entity.LiveFolderInfo mInfo -> b
    android.database.Cursor doInBackground(com.limemobile.app.launcher.entity.LiveFolderInfo[]) -> a
    void onPostExecute(android.database.Cursor) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.limemobile.app.launcher.view.LiveFolderIcon -> com.limemobile.app.launcher.view.LiveFolderIcon:
    com.limemobile.app.launcher.view.LiveFolderIcon fromXml(int,com.limemobile.app.launcher.activity.Launcher,android.view.ViewGroup,com.limemobile.app.launcher.entity.LiveFolderInfo) -> a
    boolean acceptDrop(com.limemobile.app.launcher.view.DragSource,int,int,int,int,com.limemobile.app.launcher.view.DragView,java.lang.Object) -> a
    void onDrop(com.limemobile.app.launcher.view.DragSource,int,int,int,int,com.limemobile.app.launcher.view.DragView,java.lang.Object) -> b
    void onDragEnter(com.limemobile.app.launcher.view.DragSource,int,int,int,int,com.limemobile.app.launcher.view.DragView,java.lang.Object) -> c
    void onDragOver(com.limemobile.app.launcher.view.DragSource,int,int,int,int,com.limemobile.app.launcher.view.DragView,java.lang.Object) -> d
    void onDragExit(com.limemobile.app.launcher.view.DragSource,int,int,int,int,com.limemobile.app.launcher.view.DragView,java.lang.Object) -> e
com.limemobile.app.launcher.view.SearchAppsView -> com.limemobile.app.launcher.view.SearchAppsView:
    com.limemobile.app.launcher.activity.Launcher mLauncher -> a
    com.limemobile.app.launcher.view.DragController mDragController -> b
    android.widget.ListView mList -> c
    android.widget.EditText mSearchInput -> d
    android.widget.TextView mPlayStoreSearch -> e
    java.util.ArrayList mAllAppsList -> f
    java.util.ArrayList mSearchedAppsList -> g
    com.limemobile.app.launcher.view.SearchAppsView$AppsAdapter mAppsAdapter -> h
    void onFinishInflate() -> onFinishInflate
    void setLauncher(com.limemobile.app.launcher.activity.Launcher) -> setLauncher
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    void setDragController(com.limemobile.app.launcher.view.DragController) -> setDragController
    void onDropCompleted(android.view.View,boolean) -> a
    void setApps(java.util.ArrayList) -> setApps
    void addApps(java.util.ArrayList) -> a
    void updateSearchResult(java.lang.String) -> a
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void onClick(android.view.View) -> onClick
com.limemobile.app.launcher.view.SearchAppsView$AppsAdapter -> com.limemobile.app.launcher.view.w:
    android.view.LayoutInflater mInflater -> b
    com.limemobile.app.launcher.view.SearchAppsView this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.limemobile.app.launcher.view.SearchAppsView$AppsAdapter$ViewHolder -> com.limemobile.app.launcher.view.x:
    android.widget.ImageView icon -> a
    android.widget.TextView name -> b
    android.widget.TextView description -> c
    com.limemobile.app.launcher.view.SearchAppsView$AppsAdapter this$1 -> d
com.limemobile.app.launcher.view.UserFolder -> com.limemobile.app.launcher.view.UserFolder:
    com.limemobile.app.launcher.view.UserFolder fromXml(android.content.Context) -> a
    boolean acceptDrop(com.limemobile.app.launcher.view.DragSource,int,int,int,int,com.limemobile.app.launcher.view.DragView,java.lang.Object) -> a
    void onDrop(com.limemobile.app.launcher.view.DragSource,int,int,int,int,com.limemobile.app.launcher.view.DragView,java.lang.Object) -> b
    void onDragEnter(com.limemobile.app.launcher.view.DragSource,int,int,int,int,com.limemobile.app.launcher.view.DragView,java.lang.Object) -> c
    void onDragOver(com.limemobile.app.launcher.view.DragSource,int,int,int,int,com.limemobile.app.launcher.view.DragView,java.lang.Object) -> d
    void onDragExit(com.limemobile.app.launcher.view.DragSource,int,int,int,int,com.limemobile.app.launcher.view.DragView,java.lang.Object) -> e
    void onDropCompleted(android.view.View,boolean) -> a
    void bind(com.limemobile.app.launcher.entity.FolderInfo) -> a
    void onOpen() -> c
com.limemobile.app.launcher.view.Workspace -> com.limemobile.app.launcher.view.Workspace:
    android.app.WallpaperManager mWallpaperManager -> a
    int mDefaultScreen -> b
    boolean mFirstLayout -> c
    int mCurrentScreen -> d
    int mNextScreen -> e
    android.widget.Scroller mScroller -> f
    android.view.VelocityTracker mVelocityTracker -> g
    com.limemobile.app.launcher.view.CellLayout$CellInfo mDragInfo -> h
    int[] mTargetCell -> i
    float mLastMotionX -> j
    float mLastMotionY -> k
    int mTouchState -> l
    android.view.View$OnLongClickListener mLongClickListener -> m
    com.limemobile.app.launcher.activity.Launcher mLauncher -> n
    com.limemobile.app.launcher.util.IconCache mIconCache -> o
    com.limemobile.app.launcher.view.DragController mDragController -> p
    com.limemobile.app.launcher.view.CellLayout$CellInfo mVacantCache -> q
    int[] mTempCell -> r
    int[] mTempEstimate -> s
    boolean mAllowLongPress -> t
    int mTouchSlop -> u
    int mMaximumVelocity -> v
    int mActivePointerId -> w
    com.limemobile.app.launcher.view.IndicatorView mIndicator -> x
    float SMOOTHING_CONSTANT -> y
    float mSmoothingTime -> z
    float mTouchX -> A
    com.limemobile.app.launcher.view.Workspace$WorkspaceOvershootInterpolator mScrollInterpolator -> B
    void initWorkspace() -> i
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,int,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    com.limemobile.app.launcher.view.Folder getOpenFolder() -> c
    java.util.ArrayList getOpenFolders() -> d
    boolean isDefaultScreenShowing() -> e
    int getCurrentScreen() -> f
    void setCurrentScreen(int) -> setCurrentScreen
    void addInCurrentScreen(android.view.View,int,int,int,int,boolean) -> a
    void addInScreen(android.view.View,int,int,int,int,int) -> a
    void addInScreen(android.view.View,int,int,int,int,int,boolean) -> a
    com.limemobile.app.launcher.view.CellLayout$CellInfo findAllVacantCells(boolean[]) -> a
    void clearVacantCache() -> j
    void setOnLongClickListener(android.view.View$OnLongClickListener) -> setOnLongClickListener
    void updateWallpaperOffset() -> k
    void updateWallpaperOffset(int) -> b
    void scrollTo(int,int) -> scrollTo
    void computeScroll() -> computeScroll
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchUnhandledMove(android.view.View,int) -> dispatchUnhandledMove
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void focusableViewAvailable(android.view.View) -> focusableViewAvailable
    void enableChildrenCache(int,int) -> a
    void clearChildrenCache() -> g
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void acquireVelocityTrackerAndAddMovement(android.view.MotionEvent) -> b
    void releaseVelocityTracker() -> l
    void snapToScreen(int) -> a
    void snapToScreen(int,int,boolean) -> a
    void startDrag(com.limemobile.app.launcher.view.CellLayout$CellInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addApplicationShortcut(com.limemobile.app.launcher.entity.ShortcutInfo,com.limemobile.app.launcher.view.CellLayout$CellInfo,boolean) -> a
    void onDrop(com.limemobile.app.launcher.view.DragSource,int,int,int,int,com.limemobile.app.launcher.view.DragView,java.lang.Object) -> b
    void onDragEnter(com.limemobile.app.launcher.view.DragSource,int,int,int,int,com.limemobile.app.launcher.view.DragView,java.lang.Object) -> c
    void onDragOver(com.limemobile.app.launcher.view.DragSource,int,int,int,int,com.limemobile.app.launcher.view.DragView,java.lang.Object) -> d
    void onDragExit(com.limemobile.app.launcher.view.DragSource,int,int,int,int,com.limemobile.app.launcher.view.DragView,java.lang.Object) -> e
    void onDropExternal(int,int,java.lang.Object,com.limemobile.app.launcher.view.CellLayout) -> a
    void onDropExternal(int,int,java.lang.Object,com.limemobile.app.launcher.view.CellLayout,boolean) -> a
    com.limemobile.app.launcher.view.CellLayout getCurrentDropLayout() -> m
    boolean acceptDrop(com.limemobile.app.launcher.view.DragSource,int,int,int,int,com.limemobile.app.launcher.view.DragView,java.lang.Object) -> a
    int[] estimateDropCell(int,int,int,int,android.view.View,com.limemobile.app.launcher.view.CellLayout,int[]) -> a
    void setLauncher(com.limemobile.app.launcher.activity.Launcher) -> setLauncher
    void setDragController(com.limemobile.app.launcher.view.DragController) -> setDragController
    void onDropCompleted(android.view.View,boolean) -> a
    void scrollLeft() -> a
    void scrollRight() -> b
    int getScreenForView(android.view.View) -> a
    com.limemobile.app.launcher.view.Folder getFolderForTag(java.lang.Object) -> a
    android.view.View getViewForTag(java.lang.Object) -> b
    boolean allowLongPress() -> h
    void setAllowLongPress(boolean) -> setAllowLongPress
    void removeItems(java.util.ArrayList) -> a
    void updateShortcuts(java.util.ArrayList) -> b
    void moveToDefaultScreen(boolean) -> a
    void setIndicator(com.limemobile.app.launcher.view.IndicatorView) -> setIndicator
    com.limemobile.app.launcher.activity.Launcher access$0(com.limemobile.app.launcher.view.Workspace) -> a
    com.limemobile.app.launcher.view.DragController access$1(com.limemobile.app.launcher.view.Workspace) -> b
com.limemobile.app.launcher.view.Workspace$1 -> com.limemobile.app.launcher.view.y:
    com.limemobile.app.launcher.view.Workspace this$0 -> a
    com.limemobile.app.launcher.view.CellLayout val$layout -> b
    java.util.HashSet val$packageNames -> c
    android.content.pm.PackageManager val$manager -> d
    android.appwidget.AppWidgetManager val$widgets -> e
    void run() -> run
com.limemobile.app.launcher.view.Workspace$SavedState -> com.limemobile.app.launcher.view.Workspace$SavedState:
    int currentScreen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.limemobile.app.launcher.view.Workspace$SavedState$1 -> com.limemobile.app.launcher.view.z:
    com.limemobile.app.launcher.view.Workspace$SavedState createFromParcel(android.os.Parcel) -> a
    com.limemobile.app.launcher.view.Workspace$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.limemobile.app.launcher.view.Workspace$WorkspaceOvershootInterpolator -> com.limemobile.app.launcher.view.aa:
    float mTension -> a
    void setDistance(int) -> a
    void disableSettle() -> a
    float getInterpolation(float) -> getInterpolation
com.limemobile.app.launcher.widget.ListMenuItemView -> com.limemobile.app.launcher.widget.ListMenuItemView:
    com.limemobile.app.launcher.widget.MenuItemImpl mItemData -> a
    android.widget.ImageView mIconView -> b
    android.widget.RadioButton mRadioButton -> c
    android.widget.TextView mTitleView -> d
    android.widget.CheckBox mCheckBox -> e
    android.widget.TextView mShortcutView -> f
    int mTextAppearance -> g
    android.content.Context mTextAppearanceContext -> h
    boolean mPreserveIconSpacing -> i
    android.content.Context mContext -> j
    int mMenuType -> k
    boolean mForceShowIcon -> l
    void onFinishInflate() -> onFinishInflate
    void initialize(com.limemobile.app.launcher.widget.MenuItemImpl,int) -> a
    void setForceShowIcon(boolean) -> setForceShowIcon
    void setTitle(java.lang.CharSequence) -> setTitle
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setShortcut(boolean,char) -> setShortcut
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void onMeasure(int,int) -> onMeasure
    void insertIconView() -> b
    void insertRadioButton() -> c
    void insertCheckBox() -> d
    boolean prefersCondensedTitle() -> a
com.limemobile.app.launcher.widget.ListPopupWindow -> com.limemobile.app.launcher.widget.ListPopupWindow:
    android.content.Context mContext -> b
    android.widget.PopupWindow mPopup -> c
    android.widget.ListAdapter mAdapter -> d
    com.limemobile.app.launcher.widget.ListPopupWindow$DropDownListView mDropDownList -> e
    int mDropDownHeight -> f
    int mDropDownWidth -> g
    int mDropDownHorizontalOffset -> h
    int mDropDownVerticalOffset -> i
    boolean mDropDownVerticalOffsetSet -> j
    boolean mDropDownAlwaysVisible -> k
    boolean mForceIgnoreOutsideTouch -> l
    int mListItemExpandMaximum -> a
    android.view.View mPromptView -> m
    int mPromptPosition -> n
    android.database.DataSetObserver mObserver -> o
    android.view.View mDropDownAnchorView -> p
    android.graphics.drawable.Drawable mDropDownListHighlight -> q
    android.widget.AdapterView$OnItemClickListener mItemClickListener -> r
    android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener -> s
    com.limemobile.app.launcher.widget.ListPopupWindow$ResizePopupRunnable mResizePopupRunnable -> t
    com.limemobile.app.launcher.widget.ListPopupWindow$PopupTouchInterceptor mTouchInterceptor -> u
    com.limemobile.app.launcher.widget.ListPopupWindow$ListSelectorHider mHideSelector -> v
    java.lang.Runnable mShowDropDownRunnable -> w
    android.os.Handler mHandler -> x
    android.graphics.Rect mTempRect -> y
    boolean mModal -> z
    void setAdapter(android.widget.ListAdapter) -> a
    void setModal(boolean) -> a
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> a
    android.view.View getAnchorView() -> a
    void setAnchorView(android.view.View) -> a
    void setWidth(int) -> a
    void setContentWidth(int) -> b
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> a
    void show() -> b
    void dismiss() -> c
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> a
    void removePromptView() -> h
    void setInputMethodMode(int) -> c
    void clearListSelection() -> d
    boolean isShowing() -> e
    boolean isInputMethodNotNeeded() -> f
    android.widget.ListView getListView() -> g
    int buildDropDown() -> i
    void measureScrapChild(android.view.View,int,int,android.graphics.Rect) -> a
    int measureHeightOfChildren(int,int,int,int,int) -> a
    com.limemobile.app.launcher.widget.ListPopupWindow$DropDownListView access$0(com.limemobile.app.launcher.widget.ListPopupWindow) -> a
    android.widget.PopupWindow access$1(com.limemobile.app.launcher.widget.ListPopupWindow) -> b
    android.os.Handler access$2(com.limemobile.app.launcher.widget.ListPopupWindow) -> c
    com.limemobile.app.launcher.widget.ListPopupWindow$ResizePopupRunnable access$3(com.limemobile.app.launcher.widget.ListPopupWindow) -> d
com.limemobile.app.launcher.widget.ListPopupWindow$1 -> com.limemobile.app.launcher.widget.a:
    com.limemobile.app.launcher.widget.ListPopupWindow this$0 -> a
    void run() -> run
com.limemobile.app.launcher.widget.ListPopupWindow$2 -> com.limemobile.app.launcher.widget.b:
    com.limemobile.app.launcher.widget.ListPopupWindow this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.limemobile.app.launcher.widget.ListPopupWindow$DropDownListView -> com.limemobile.app.launcher.widget.c:
    boolean mListSelectionHidden -> a
    boolean mHijackFocus -> b
    boolean isInTouchMode() -> isInTouchMode
    boolean hasWindowFocus() -> hasWindowFocus
    boolean isFocused() -> isFocused
    boolean hasFocus() -> hasFocus
    void access$0(com.limemobile.app.launcher.widget.ListPopupWindow$DropDownListView,boolean) -> a
com.limemobile.app.launcher.widget.ListPopupWindow$ListSelectorHider -> com.limemobile.app.launcher.widget.d:
    com.limemobile.app.launcher.widget.ListPopupWindow this$0 -> a
    void run() -> run
com.limemobile.app.launcher.widget.ListPopupWindow$PopupDataSetObserver -> com.limemobile.app.launcher.widget.e:
    com.limemobile.app.launcher.widget.ListPopupWindow this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.limemobile.app.launcher.widget.ListPopupWindow$PopupTouchInterceptor -> com.limemobile.app.launcher.widget.f:
    com.limemobile.app.launcher.widget.ListPopupWindow this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.limemobile.app.launcher.widget.ListPopupWindow$ResizePopupRunnable -> com.limemobile.app.launcher.widget.g:
    com.limemobile.app.launcher.widget.ListPopupWindow this$0 -> a
    void run() -> run
com.limemobile.app.launcher.widget.MenuBuilder -> com.limemobile.app.launcher.widget.h:
    int[] sCategoryToOrder -> d
    android.content.Context mContext -> e
    android.content.res.Resources mResources -> f
    boolean mQwertyMode -> g
    boolean mShortcutsVisible -> h
    com.limemobile.app.launcher.widget.MenuBuilder$Callback mCallback -> i
    java.util.ArrayList mItems -> j
    java.util.ArrayList mVisibleItems -> k
    boolean mIsVisibleItemsStale -> l
    java.util.ArrayList mActionItems -> m
    java.util.ArrayList mNonActionItems -> n
    boolean mIsActionItemsStale -> o
    android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo -> p
    java.lang.CharSequence mHeaderTitle -> a
    android.graphics.drawable.Drawable mHeaderIcon -> b
    android.view.View mHeaderView -> c
    boolean mPreventDispatchingItemsChanged -> q
    boolean mItemsChangedWhileDispatchPrevented -> r
    boolean mOptionalIconsVisible -> s
    boolean mIsClosing -> t
    java.util.ArrayList mTempShortcutItemList -> u
    java.util.concurrent.CopyOnWriteArrayList mPresenters -> v
    com.limemobile.app.launcher.widget.MenuItemImpl mExpandedItem -> w
    void addMenuPresenter(com.limemobile.app.launcher.widget.MenuPresenter) -> a
    void dispatchPresenterUpdate(boolean) -> c
    void setCallback(com.limemobile.app.launcher.widget.MenuBuilder$Callback) -> a
    android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> a
    android.view.MenuItem add(java.lang.CharSequence) -> add
    android.view.MenuItem add(int) -> add
    android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    android.view.MenuItem add(int,int,int,int) -> add
    android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void removeItemAtInt(int,boolean) -> a
    void clear() -> clear
    void setExclusiveItemChecked(android.view.MenuItem) -> a
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    android.view.MenuItem findItem(int) -> findItem
    int findItemIndex(int) -> a
    int findGroupIndex(int) -> b
    int findGroupIndex(int,int) -> a
    int size() -> size
    android.view.MenuItem getItem(int) -> getItem
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    void setQwertyMode(boolean) -> setQwertyMode
    int getOrdering(int) -> e
    boolean isQwertyMode() -> a
    void setShortcutsVisibleInner(boolean) -> d
    boolean isShortcutsVisible() -> b
    android.content.res.Resources getResources() -> c
    android.content.Context getContext() -> d
    boolean dispatchMenuItemSelected(com.limemobile.app.launcher.widget.MenuBuilder,android.view.MenuItem) -> a
    int findInsertIndex(java.util.ArrayList,int) -> a
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> a
    com.limemobile.app.launcher.widget.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> a
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    boolean performItemAction(android.view.MenuItem,int) -> a
    void close(boolean) -> a
    void close() -> close
    void onItemsChanged(boolean) -> b
    void stopDispatchingItemsChanged() -> e
    void startDispatchingItemsChanged() -> f
    void onItemVisibleChanged(com.limemobile.app.launcher.widget.MenuItemImpl) -> a
    void onItemActionRequestChanged(com.limemobile.app.launcher.widget.MenuItemImpl) -> b
    java.util.ArrayList getVisibleItems() -> g
    void flagActionItems() -> h
    java.util.ArrayList getNonActionItems() -> i
    void clearHeader() -> clearHeader
    void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> a
    com.limemobile.app.launcher.widget.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> a
    com.limemobile.app.launcher.widget.MenuBuilder setHeaderTitleInt(int) -> c
    com.limemobile.app.launcher.widget.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> a
    com.limemobile.app.launcher.widget.MenuBuilder setHeaderIconInt(int) -> d
    com.limemobile.app.launcher.widget.MenuBuilder setHeaderViewInt(android.view.View) -> a
    com.limemobile.app.launcher.widget.MenuBuilder getRootMenu() -> j
    boolean getOptionalIconsVisible() -> k
    boolean collapseItemActionView(com.limemobile.app.launcher.widget.MenuItemImpl) -> c
    com.limemobile.app.launcher.widget.MenuItemImpl getExpandedItem() -> l
com.limemobile.app.launcher.widget.MenuBuilder$Callback -> com.limemobile.app.launcher.widget.i:
    boolean onMenuItemSelected(com.limemobile.app.launcher.widget.MenuBuilder,android.view.MenuItem) -> a
com.limemobile.app.launcher.widget.MenuItemImpl -> com.limemobile.app.launcher.widget.j:
    int mId -> a
    int mGroup -> b
    int mCategoryOrder -> c
    int mOrdering -> d
    java.lang.CharSequence mTitle -> e
    java.lang.CharSequence mTitleCondensed -> f
    android.content.Intent mIntent -> g
    char mShortcutNumericChar -> h
    char mShortcutAlphabeticChar -> i
    android.graphics.drawable.Drawable mIconDrawable -> j
    int mIconResId -> k
    com.limemobile.app.launcher.widget.MenuBuilder mMenu -> l
    com.limemobile.app.launcher.widget.SubMenuBuilder mSubMenu -> m
    java.lang.Runnable mItemCallback -> n
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> o
    int mFlags -> p
    android.view.View mActionView -> q
    boolean mIsActionViewExpanded -> r
    android.view.ContextMenu$ContextMenuInfo mMenuInfo -> s
    java.lang.String sPrependShortcutLabel -> t
    java.lang.String sEnterShortcutLabel -> u
    java.lang.String sDeleteShortcutLabel -> v
    java.lang.String sSpaceShortcutLabel -> w
    boolean invoke() -> a
    boolean isEnabled() -> isEnabled
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    int getGroupId() -> getGroupId
    int getItemId() -> getItemId
    int getOrder() -> getOrder
    int getOrdering() -> b
    android.content.Intent getIntent() -> getIntent
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getNumericShortcut() -> getNumericShortcut
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    char getShortcut() -> c
    java.lang.String getShortcutLabel() -> d
    boolean shouldShowShortcut() -> e
    android.view.SubMenu getSubMenu() -> getSubMenu
    boolean hasSubMenu() -> hasSubMenu
    void setSubMenu(com.limemobile.app.launcher.widget.SubMenuBuilder) -> a
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleForItemView(com.limemobile.app.launcher.widget.MenuView$ItemView) -> a
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    boolean isCheckable() -> isCheckable
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    void setExclusiveCheckable(boolean) -> a
    boolean isExclusiveCheckable() -> f
    boolean isChecked() -> isChecked
    android.view.MenuItem setChecked(boolean) -> setChecked
    void setCheckedInt(boolean) -> b
    boolean isVisible() -> isVisible
    boolean setVisibleInt(boolean) -> c
    android.view.MenuItem setVisible(boolean) -> setVisible
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    java.lang.String toString() -> toString
    void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> a
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    boolean shouldShowIcon() -> g
    boolean isActionButton() -> h
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    android.view.ActionProvider getActionProvider() -> getActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
com.limemobile.app.launcher.widget.MenuPopupHelper -> com.limemobile.app.launcher.widget.k:
    android.content.Context mContext -> b
    android.view.LayoutInflater mInflater -> c
    com.limemobile.app.launcher.widget.ListPopupWindow mPopup -> d
    com.limemobile.app.launcher.widget.MenuBuilder mMenu -> e
    int mPopupMaxWidth -> f
    android.view.View mAnchorView -> g
    boolean mOverflowOnly -> h
    android.view.ViewTreeObserver mTreeObserver -> i
    com.limemobile.app.launcher.widget.MenuPopupHelper$MenuAdapter mAdapter -> j
    com.limemobile.app.launcher.widget.MenuPresenter$Callback mPresenterCallback -> k
    boolean mForceShowIcon -> a
    android.view.ViewGroup mMeasureParent -> l
    void show() -> a
    boolean tryShow() -> b
    void dismiss() -> c
    void onDismiss() -> onDismiss
    boolean isShowing() -> d
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    int measureContentWidth(android.widget.ListAdapter) -> a
    void onGlobalLayout() -> onGlobalLayout
    void initForMenu(android.content.Context,com.limemobile.app.launcher.widget.MenuBuilder) -> a
    void updateMenuView(boolean) -> a
    void setCallback(com.limemobile.app.launcher.widget.MenuPresenter$Callback) -> a
    void onCloseMenu(com.limemobile.app.launcher.widget.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> e
    boolean collapseItemActionView(com.limemobile.app.launcher.widget.MenuBuilder,com.limemobile.app.launcher.widget.MenuItemImpl) -> a
    boolean access$0(com.limemobile.app.launcher.widget.MenuPopupHelper) -> a
    android.view.LayoutInflater access$1(com.limemobile.app.launcher.widget.MenuPopupHelper) -> b
    com.limemobile.app.launcher.widget.MenuBuilder access$2(com.limemobile.app.launcher.widget.MenuPopupHelper) -> c
    com.limemobile.app.launcher.widget.MenuPopupHelper$MenuAdapter access$3(com.limemobile.app.launcher.widget.MenuPopupHelper) -> d
com.limemobile.app.launcher.widget.MenuPopupHelper$ExpandedIndexObserver -> com.limemobile.app.launcher.widget.l:
    com.limemobile.app.launcher.widget.MenuPopupHelper this$0 -> a
    void onChanged() -> onChanged
com.limemobile.app.launcher.widget.MenuPopupHelper$MenuAdapter -> com.limemobile.app.launcher.widget.m:
    com.limemobile.app.launcher.widget.MenuBuilder mAdapterMenu -> b
    int mExpandedIndex -> c
    com.limemobile.app.launcher.widget.MenuPopupHelper this$0 -> a
    int getCount() -> getCount
    com.limemobile.app.launcher.widget.MenuItemImpl getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void findExpandedIndex() -> a
    java.lang.Object getItem(int) -> getItem
    com.limemobile.app.launcher.widget.MenuBuilder access$1(com.limemobile.app.launcher.widget.MenuPopupHelper$MenuAdapter) -> a
com.limemobile.app.launcher.widget.MenuPresenter -> com.limemobile.app.launcher.widget.n:
    void initForMenu(android.content.Context,com.limemobile.app.launcher.widget.MenuBuilder) -> a
    void updateMenuView(boolean) -> a
    void onCloseMenu(com.limemobile.app.launcher.widget.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> e
    boolean collapseItemActionView(com.limemobile.app.launcher.widget.MenuBuilder,com.limemobile.app.launcher.widget.MenuItemImpl) -> a
com.limemobile.app.launcher.widget.MenuPresenter$Callback -> com.limemobile.app.launcher.widget.o:
    void onCloseMenu(com.limemobile.app.launcher.widget.MenuBuilder,boolean) -> a
com.limemobile.app.launcher.widget.MenuView -> com.limemobile.app.launcher.widget.p:
com.limemobile.app.launcher.widget.MenuView$ItemView -> com.limemobile.app.launcher.widget.q:
    void initialize(com.limemobile.app.launcher.widget.MenuItemImpl,int) -> a
    boolean prefersCondensedTitle() -> a
com.limemobile.app.launcher.widget.PopupMenu -> com.limemobile.app.launcher.widget.r:
    android.content.Context mContext -> a
    com.limemobile.app.launcher.widget.MenuBuilder mMenu -> b
    android.view.View mAnchor -> c
    com.limemobile.app.launcher.widget.MenuPopupHelper mPopup -> d
    com.limemobile.app.launcher.widget.PopupMenu$OnMenuItemClickListener mMenuItemClickListener -> e
    com.limemobile.app.launcher.widget.PopupMenu$OnDismissListener mDismissListener -> f
    android.view.Menu getMenu() -> a
    void show() -> b
    void dismiss() -> c
    void setOnMenuItemClickListener(com.limemobile.app.launcher.widget.PopupMenu$OnMenuItemClickListener) -> a
    boolean onMenuItemSelected(com.limemobile.app.launcher.widget.MenuBuilder,android.view.MenuItem) -> a
    void onCloseMenu(com.limemobile.app.launcher.widget.MenuBuilder,boolean) -> a
com.limemobile.app.launcher.widget.PopupMenu$OnDismissListener -> com.limemobile.app.launcher.widget.s:
    void onDismiss(com.limemobile.app.launcher.widget.PopupMenu) -> a
com.limemobile.app.launcher.widget.PopupMenu$OnMenuItemClickListener -> com.limemobile.app.launcher.widget.t:
    boolean onMenuItemClick(android.view.MenuItem) -> a
com.limemobile.app.launcher.widget.QuickSelectMenu -> com.limemobile.app.launcher.widget.u:
    com.limemobile.app.launcher.widget.PopupMenu mImplBackport -> a
    com.limemobile.app.launcher.widget.QuickSelectMenu$ImplMode mMode -> b
    com.limemobile.app.launcher.widget.QuickSelectMenu$OnItemSelectedListener mItemSelectedListener -> c
    android.view.Menu getMenu() -> a
    void setOnItemSelectedListener(com.limemobile.app.launcher.widget.QuickSelectMenu$OnItemSelectedListener) -> a
    void show() -> b
    void dismiss() -> c
    boolean onMenuItemClickImpl(android.view.MenuItem) -> a
com.limemobile.app.launcher.widget.QuickSelectMenu$1 -> com.limemobile.app.launcher.widget.v:
    com.limemobile.app.launcher.widget.QuickSelectMenu this$0 -> a
    boolean onMenuItemClick(android.view.MenuItem) -> a
com.limemobile.app.launcher.widget.QuickSelectMenu$ImplMode -> com.limemobile.app.launcher.widget.w:
    com.limemobile.app.launcher.widget.QuickSelectMenu$ImplMode PLATFORM -> a
    com.limemobile.app.launcher.widget.QuickSelectMenu$ImplMode BACKPORT -> b
    com.limemobile.app.launcher.widget.QuickSelectMenu$ImplMode NONE -> c
    com.limemobile.app.launcher.widget.QuickSelectMenu$ImplMode[] ENUM$VALUES -> d
    com.limemobile.app.launcher.widget.QuickSelectMenu$ImplMode[] values() -> values
    com.limemobile.app.launcher.widget.QuickSelectMenu$ImplMode valueOf(java.lang.String) -> valueOf
com.limemobile.app.launcher.widget.QuickSelectMenu$OnItemSelectedListener -> com.limemobile.app.launcher.widget.x:
    void onItemSelected(java.lang.CharSequence,int) -> a
com.limemobile.app.launcher.widget.SubMenuBuilder -> com.limemobile.app.launcher.widget.y:
    com.limemobile.app.launcher.widget.MenuBuilder mParentMenu -> d
    com.limemobile.app.launcher.widget.MenuItemImpl mItem -> e
    void setQwertyMode(boolean) -> setQwertyMode
    boolean isQwertyMode() -> a
    boolean isShortcutsVisible() -> b
    android.view.MenuItem getItem() -> getItem
    void setCallback(com.limemobile.app.launcher.widget.MenuBuilder$Callback) -> a
    com.limemobile.app.launcher.widget.MenuBuilder getRootMenu() -> j
    boolean dispatchMenuItemSelected(com.limemobile.app.launcher.widget.MenuBuilder,android.view.MenuItem) -> a
    android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.SubMenu setIcon(int) -> setIcon
    android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    boolean collapseItemActionView(com.limemobile.app.launcher.widget.MenuItemImpl) -> c
com.limemobile.app.launcher.wp8.AllAppsLetterFilter -> com.limemobile.app.launcher.wp8.AllAppsLetterFilter:
    com.limemobile.app.launcher.activity.Launcher mLauncher -> a
    com.limemobile.app.launcher.view.DragController mDragController -> b
    com.limemobile.app.launcher.view.SearchAppsView mSearchView -> c
    android.widget.GridView mLetterGrid -> d
    android.widget.ListView mList -> e
    com.limemobile.app.launcher.view.LetterFilterView mLetterFilter -> f
    android.widget.TextView mLetterIndicator -> g
    com.limemobile.app.launcher.wp8.AllAppsLetterFilter$OverlayThread mOverlayThread -> h
    com.limemobile.app.launcher.wp8.AllAppsLetterFilter$ASCIIComparator mASCIIComparator -> i
    java.util.ArrayList mAllAppsList -> j
    java.util.HashMap mLetterIndex -> k
    float mZoom -> l
    com.limemobile.app.launcher.wp8.AllAppsLetterFilter$AppsAdapter mAppsAdapter -> m
    com.limemobile.app.launcher.wp8.AllAppsLetterFilter$LettersAdapter mLettersAdapter -> n
    com.limemobile.app.launcher.anim.Rotate3d mLeftRotate -> o
    com.limemobile.app.launcher.anim.Rotate3d mRightRotate -> p
    void onFinishInflate() -> onFinishInflate
    void setLauncher(com.limemobile.app.launcher.activity.Launcher) -> setLauncher
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    void setDragController(com.limemobile.app.launcher.view.DragController) -> setDragController
    void onDropCompleted(android.view.View,boolean) -> a
    void zoom(float,boolean) -> a
    void onAnimationEnd() -> onAnimationEnd
    boolean isVisible() -> a
    boolean isOpaque() -> isOpaque
    void setApps(java.util.ArrayList) -> setApps
    void addApps(java.util.ArrayList) -> a
    void removeApps(java.util.ArrayList) -> b
    void updateApps(java.util.ArrayList) -> c
    int findAppByComponent(java.util.ArrayList,com.limemobile.app.launcher.entity.ApplicationInfo) -> a
    void surrender() -> b
    void onTouchingLetterChanged(java.lang.String) -> a
    void onClick(android.view.View) -> onClick
    com.limemobile.app.launcher.view.AllAppsView$MenuType getOptionsMenuType() -> c
    android.widget.TextView access$0(com.limemobile.app.launcher.wp8.AllAppsLetterFilter) -> a
    android.widget.GridView access$1(com.limemobile.app.launcher.wp8.AllAppsLetterFilter) -> b
    java.util.HashMap access$2(com.limemobile.app.launcher.wp8.AllAppsLetterFilter) -> c
    com.limemobile.app.launcher.view.SearchAppsView access$3(com.limemobile.app.launcher.wp8.AllAppsLetterFilter) -> d
com.limemobile.app.launcher.wp8.AllAppsLetterFilter$1 -> com.limemobile.app.launcher.wp8.a:
    com.limemobile.app.launcher.wp8.AllAppsLetterFilter this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
com.limemobile.app.launcher.wp8.AllAppsLetterFilter$ASCIIComparator -> com.limemobile.app.launcher.wp8.b:
    com.limemobile.app.launcher.wp8.AllAppsLetterFilter this$0 -> a
    int compare(com.limemobile.app.launcher.entity.ApplicationInfo,com.limemobile.app.launcher.entity.ApplicationInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.limemobile.app.launcher.wp8.AllAppsLetterFilter$AppsAdapter -> com.limemobile.app.launcher.wp8.c:
    android.view.LayoutInflater mInflater -> b
    com.limemobile.app.launcher.wp8.AllAppsLetterFilter this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.limemobile.app.launcher.wp8.AllAppsLetterFilter$AppsAdapter$ViewHolder -> com.limemobile.app.launcher.wp8.d:
    android.widget.TextView letter -> a
    android.widget.ImageView icon -> b
    android.widget.TextView name -> c
    android.widget.TextView version -> d
    com.limemobile.app.launcher.wp8.AllAppsLetterFilter$AppsAdapter this$1 -> e
com.limemobile.app.launcher.wp8.AllAppsLetterFilter$LettersAdapter -> com.limemobile.app.launcher.wp8.e:
    com.limemobile.app.launcher.wp8.AllAppsLetterFilter this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.limemobile.app.launcher.wp8.AllAppsLetterFilter$OverlayThread -> com.limemobile.app.launcher.wp8.f:
    com.limemobile.app.launcher.wp8.AllAppsLetterFilter this$0 -> a
    void run() -> run
com.limemobile.app.launcher.wp8.R -> com.limemobile.app.launcher.wp8.g:
com.limemobile.app.launcher.wp8.R$styleable -> com.limemobile.app.launcher.wp8.h:
    int[] CellLayout -> CellLayout
    int CellLayout_cellHeight -> CellLayout_cellHeight
    int CellLayout_cellWidth -> CellLayout_cellWidth
    int CellLayout_longAxisCells -> CellLayout_longAxisCells
    int CellLayout_longAxisEndPadding -> CellLayout_longAxisEndPadding
    int CellLayout_longAxisStartPadding -> CellLayout_longAxisStartPadding
    int CellLayout_shortAxisCells -> CellLayout_shortAxisCells
    int CellLayout_shortAxisEndPadding -> CellLayout_shortAxisEndPadding
    int CellLayout_shortAxisStartPadding -> CellLayout_shortAxisStartPadding
    int[] ClippedImageView -> ClippedImageView
    int ClippedImageView_ignoreZone -> ClippedImageView_ignoreZone
    int[] DeleteZone -> DeleteZone
    int DeleteZone_direction -> DeleteZone_direction
    int[] Favorite -> Favorite
    int Favorite_className -> Favorite_className
    int Favorite_icon -> Favorite_icon
    int Favorite_packageName -> Favorite_packageName
    int Favorite_screen -> Favorite_screen
    int Favorite_spanX -> Favorite_spanX
    int Favorite_spanY -> Favorite_spanY
    int Favorite_title -> Favorite_title
    int Favorite_uri -> Favorite_uri
    int Favorite_x -> Favorite_x
    int Favorite_y -> Favorite_y
    int[] HandleView -> HandleView
    int HandleView_direction -> HandleView_direction
    int[] Workspace -> Workspace
    int Workspace_defaultScreen -> Workspace_defaultScreen
